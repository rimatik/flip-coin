{
  "contractName": "Random",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRandom",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRandom\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol\":\"Random\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol\":{\"keccak256\":\"0x637d375a362e785ecda984041656d3ce26da1eaf89d59375cf12b34e3687041a\",\"urls\":[\"bzz-raw://f703d810f3b21acccb28cb76601f542c91c62084298bd2b26d86bd2d613b3d3a\",\"dweb:/ipfs/QmTF6kNfBiMDCJ9jjF2ghKCbLuwRGoE7gbsW6PLRZSiwfg\"]},\"/C/Users/Slaven/source/repos/flip-coin/contracts/provableAPI.sol\":{\"keccak256\":\"0x1fc6722eebb007804dc77ee8e11687a961b4e544ccccf8af18d8f445e0f52a34\",\"urls\":[\"bzz-raw://eaf215a13707520c96593e2d662d8e3eb18ff439a05468bc8e453532fe1e8286\",\"dweb:/ipfs/QmSEi8wMqzGPjH6d6KbZJzz4SgvSAHgCMVgFNtHXmhCUvW\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b62001f4c565b6000809050600062030d40905060006200004b836001846200009e60201b60201c565b90507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389604051808060200182810382526034815260200180620045296034913960400191505060405180910390a1505050565b60008083118015620000b1575060208311155b620000bb57600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015620000f85781602001600182028038833980820191505090505b5090508360f81b816000815181106200010d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015620001735781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015620001ad5781602001600182028038833980820191505090505b5090506000620001c26200067160201b60201c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015620002175781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015620002575781602001600182028038833980820191505090505b509050620002728260186008846000620009aa60201b60201c565b506200027d62001e5b565b60405180608001604052808781526020018881526020018681526020018481525090506000620002ea6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c62000a0c60201b60201c565b9050606060086040519080825280601f01601f191660200182016040528015620003235781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506200065e8282856001600481106200046457fe5b60200201516002876000600481106200047957fe5b60200201516040518082805190602001908083835b60208310620004b357805182526020820191506020810190506020830392506200048e565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015620004f6573d6000803e3d6000fd5b5050506040513d60208110156200050c57600080fd5b8101908080519060200190929190505050876002600481106200052b57fe5b60200201516040516020018085805190602001908083835b6020831062000568578051825260208201915060208101905060208303925062000543565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310620005bb578051825260208201915060208101905060208303925062000596565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310620006145780518252602082019150602081019050602083039250620005ef565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012062000da460201b60201c565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620007025750600062000700600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000dc060201b60201c565b145b156200071c576200071a600062000dcb60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200078757600080fd5b505af11580156200079c573d6000803e3d6000fd5b505050506040513d6020811015620007b357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200090057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200088357600080fd5b505af115801562000898573d6000803e3d6000fd5b505050506040513d6020811015620008af57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200096857600080fd5b505afa1580156200097d573d6000803e3d6000fd5b505050506040513d60208110156200099457600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015620009c257600080fd5b600086602001905060008460200190505b868860200101821015620009fd5781890151808288015250602082019150602081019050620009d3565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000a9d5750600062000a9b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000dc060201b60201c565b145b1562000ab75762000ab5600062000dcb60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000b2257600080fd5b505af115801562000b37573d6000803e3d6000fd5b505050506040513d602081101562000b4e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000c9b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000c1e57600080fd5b505af115801562000c33573d6000803e3d6000fd5b505050506040513d602081101562000c4a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801562000cd457816020015b606081526020019060019003908162000cbe5790505b5090508360006004811062000ce557fe5b60200201518160008151811062000cf857fe5b60200260200101819052508360016004811062000d1157fe5b60200201518160018151811062000d2457fe5b60200260200101819052508360026004811062000d3d57fe5b60200201518160028151811062000d5057fe5b60200260200101819052508360036004811062000d6957fe5b60200201518160038151811062000d7c57fe5b602002602001018190525062000d9a85828562000de460201b60201c565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000813b9050919050565b600062000ddd6200137860201b60201c565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000e755750600062000e73600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000dc060201b60201c565b145b1562000e8f5762000e8d600062000dcb60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000efa57600080fd5b505af115801562000f0f573d6000803e3d6000fd5b505050506040513d602081101562000f2657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200107357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000ff657600080fd5b505af11580156200100b573d6000803e3d6000fd5b505050506040513d60208110156200102257600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200110b578082015181840152602081019050620010ee565b50505050905090810190601f168015620011395780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156200115a57600080fd5b505af11580156200116f573d6000803e3d6000fd5b505050506040513d60208110156200118657600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115620011bb576000801b91505062001371565b6060620011ce856200194760201b60201c565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156200127457808201518184015260208101905062001257565b50505050905090810190601f168015620012a25780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015620012dd578082015181840152602081019050620012c0565b50505050905090810190601f1680156200130b5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156200132e57600080fd5b505af115801562001343573d6000803e3d6000fd5b50505050506040513d60208110156200135b57600080fd5b8101908080519060200190929190505050925050505b9392505050565b600080620013a0731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000dc060201b60201c565b11156200144c57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620014426040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001a0260201b60201c565b6001905062001944565b60006200147373c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000dc060201b60201c565b11156200151f5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015156040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001a0260201b60201c565b6001905062001944565b60006200154673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000dc060201b60201c565b1115620015f25773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015e86040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001a0260201b60201c565b6001905062001944565b60006200161973146500cfd35b22e4a392fe0adc06de1a1368ed4862000dc060201b60201c565b1115620016c55773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016bb6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001a0260201b60201c565b6001905062001944565b6000620016ec73a2998efd205fb9d4b4963afb70778d6354ad3a4162000dc060201b60201c565b1115620017985773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200178e6040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525062001a0260201b60201c565b6001905062001944565b6000620017bf736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000dc060201b60201c565b11156200182557736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001944565b60006200184c7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000dc060201b60201c565b1115620018b2577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001944565b6000620018d97351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000dc060201b60201c565b11156200193f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001944565b600090505b90565b60606200195962001a1e60201b60201c565b6200196362001e83565b6200197c8161040062001a2a60201b620021001760201c565b620019928162001a7760201b6200214a1760201c565b60008090505b8351811015620019de57620019d0848281518110620019b357fe5b60200260200101518362001a8d60201b620021581790919060201c565b808060010191505062001998565b50620019f58162001ac160201b6200217d1760201c565b8060000151915050919050565b806002908051906020019062001a1a92919062001e9d565b5050565b60405180590338823950565b600081905060006020828162001a3c57fe5b061462001a57576020818162001a4e57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b62001a8a81600462001ad760201b60201c565b50565b62001aa2826002835162001aff60201b60201c565b62001abc818362001c8760201b620022ec1790919060201c565b505050565b62001ad481600762001ad760201b60201c565b50565b62001afb601f60058360ff16901b178362001d4760201b620023971790919060201c565b5050565b6017811162001b345762001b2e8160058460ff16901b60ff16178462001d4760201b620023971790919060201c565b62001c82565b60ff811162001b855762001b61601860058460ff16901b178462001d4760201b620023971790919060201c565b62001b7e8160018562001d9060201b620023d7179092919060201c565b5062001c81565b61ffff811162001bd75762001bb3601960058460ff16901b178462001d4760201b620023971790919060201c565b62001bd08160028562001d9060201b620023d7179092919060201c565b5062001c80565b63ffffffff811162001c2b5762001c07601a60058460ff16901b178462001d4760201b620023971790919060201c565b62001c248160048562001d9060201b620023d7179092919060201c565b5062001c7f565b67ffffffffffffffff811162001c7e5762001c5f601b60058460ff16901b178462001d4760201b620023971790919060201c565b62001c7c8160088562001d9060201b620023d7179092919060201c565b505b5b5b5b5b505050565b62001c9162001e83565b8260200151836000015151835101111562001cd25762001cd183600262001cc48660200151865162001e0a60201b60201c565b0262001e2860201b60201c565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811062001d1b578151835260208301925060208201915060208103905062001cf6565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111562001d765762001d7582600284602001510262001e2860201b60201c565b5b815180516020818301018381536001820183525050505050565b62001d9a62001e83565b83602001518460000151518301111562001dd95762001dd884600262001dcb87602001518662001e0a60201b60201c565b0262001e2860201b60201c565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111562001e1e5782905062001e22565b8190505b92915050565b60608260000151905062001e43838362001a2a60201b60201c565b62001e55838262001c8760201b60201c565b50505050565b60405180608001604052806004905b606081526020019060019003908162001e6a5790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001ee057805160ff191683800117855562001f11565b8280016001018555821562001f11579182015b8281111562001f1057825182559160200191906001019062001ef3565b5b50905062001f20919062001f24565b5090565b62001f4991905b8082111562001f4557600081600090555060010162001f2b565b5090565b90565b6125cd8062001f5c6000396000f3fe60806040526004361061004a5760003560e01c806327dc297e1461004f57806338bbfa5014610121578063a2e620451461028a578063dc34b0aa14610294578063fbddd14b146102bf575b600080fd5b34801561005b57600080fd5b5061011f6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102ea565b005b34801561012d57600080fd5b506102886004803603606081101561014457600080fd5b81019080803590602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020257600080fd5b82018360208201111561021457600080fd5b8035906020019184600183028401116401000000008311171561023657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061032d565b005b61029261049c565b005b3480156102a057600080fd5b506102a9610509565b6040518082815260200191505060405180910390f35b3480156102cb57600080fd5b506102d461050f565b6040518082815260200191505060405180910390f35b610329828260006040519080825280601f01601f1916602001820160405280156103235781602001600182028038833980820191505090505b5061032d565b5050565b6103356105c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f4572726f7200000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60006002836040516020018082805190602001908083835b6020831061041057805182526020820191506020810190506020830392506103ed565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161045557fe5b069050806005819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a150505050565b6000809050600062030d40905060006104b7836001846108e5565b90507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806125646034913960400191505060405180910390a1505050565b60055481565b60008060405180807f74657374000000000000000000000000000000000000000000000000000000008152506004019050604051809103902090506105bf816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f746573740000000000000000000000000000000000000000000000000000000081525061032d565b8091505090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061064e5750600061064c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b1561065f5761065d6000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106c957600080fd5b505af11580156106dd573d6000803e3d6000fd5b505050506040513d60208110156106f357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461083c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107c157600080fd5b505af11580156107d5573d6000803e3d6000fd5b505050506040513d60208110156107eb57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050506040513d60208110156108cf57600080fd5b8101908080519060200190929190505050905090565b600080831180156108f7575060208311155b61090057600080fd5b600a84029350606060016040519080825280601f01601f19166020018201604052801561093c5781602001600182028038833980820191505090505b5090508360f81b8160008151811061095057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156109b55781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156109ee5781602001600182028038833980820191505090505b50905060006109fb610e9c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610a4f5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610a8e5781602001600182028038833980820191505090505b509050610aa182601860088460006111b9565b50610aaa61247d565b60405180608001604052808781526020018881526020018681526020018481525090506000610b0f6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611218565b9050606060086040519080825280601f01601f191660200182016040528015610b475781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350610e6d828285600160048110610c8657fe5b6020020151600287600060048110610c9a57fe5b60200201516040518082805190602001908083835b60208310610cd25780518252602082019150602081019050602083039250610caf565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610d14573d6000803e3d6000fd5b5050506040513d6020811015610d2957600080fd5b810190808051906020019092919050505087600260048110610d4757fe5b60200201516040516020018085805190602001908083835b60208310610d825780518252602082019150602081019050602083039250610d5f565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310610dd35780518252602082019150602081019050602083039250610db0565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310610e2a5780518252602082019150602081019050602083039250610e07565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611585565b8199505050505050505050509392505050565b6000813b9050919050565b6000610e956115a1565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f2457506000610f22600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b15610f3557610f336000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f9f57600080fd5b505af1158015610fb3573d6000803e3d6000fd5b505050506040513d6020811015610fc957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461111257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561109757600080fd5b505af11580156110ab573d6000803e3d6000fd5b505050506040513d60208110156110c157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117957600080fd5b505afa15801561118d573d6000803e3d6000fd5b505050506040513d60208110156111a357600080fd5b8101908080519060200190929190505050905090565b60606000828501905080845110156111d057600080fd5b600086602001905060008460200190505b86886020010182101561120957818901518082880152506020820191506020810190506111e1565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112a05750600061129e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b156112b1576112af6000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050506040513d602081101561134557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461148e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561141357600080fd5b505af1158015611427573d6000803e3d6000fd5b505050506040513d602081101561143d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b606060046040519080825280602002602001820160405280156114c557816020015b60608152602001906001900390816114b05790505b509050836000600481106114d557fe5b6020020151816000815181106114e757fe5b6020026020010181905250836001600481106114ff57fe5b60200201518160018151811061151157fe5b60200260200101819052508360026004811061152957fe5b60200201518160028151811061153b57fe5b60200260200101819052508360036004811061155357fe5b60200201518160038151811061156557fe5b602002602001018190525061157b858285611af8565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000806115c1731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e80565b111561166357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061165a6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061205a565b60019050611af5565b600061168273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e80565b11156117245773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061171b6040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061205a565b60019050611af5565b600061174373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e80565b11156117e55773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117dc6040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061205a565b60019050611af5565b600061180473146500cfd35b22e4a392fe0adc06de1a1368ed48610e80565b11156118a65773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061189d6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061205a565b60019050611af5565b60006118c573a2998efd205fb9d4b4963afb70778d6354ad3a41610e80565b11156119675773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061195e6040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061205a565b60019050611af5565b6000611986736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e80565b11156119ea57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611af5565b6000611a097320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e80565b1115611a6d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611af5565b6000611a8c7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e80565b1115611af0577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611af5565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b8057506000611b7e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b15611b9157611b8f6000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611bfb57600080fd5b505af1158015611c0f573d6000803e3d6000fd5b505050506040513d6020811015611c2557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d6e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cf357600080fd5b505af1158015611d07573d6000803e3d6000fd5b505050506040513d6020811015611d1d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611e04578082015181840152602081019050611de9565b50505050905090810190601f168015611e315780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611e5157600080fd5b505af1158015611e65573d6000803e3d6000fd5b505050506040513d6020811015611e7b57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115611eae576000801b915050612053565b6060611eb985612074565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015611f5d578082015181840152602081019050611f42565b50505050905090810190601f168015611f8a5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611fc3578082015181840152602081019050611fa8565b50505050905090810190601f168015611ff05780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561201257600080fd5b505af1158015612026573d6000803e3d6000fd5b50505050506040513d602081101561203d57600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906120709291906124a4565b5050565b606061207e6120f4565b612086612524565b61209281610400612100565b61209b8161214a565b60008090505b83518110156120dd576120d08482815181106120b957fe5b60200260200101518361215890919063ffffffff16565b80806001019150506120a1565b506120e78161217d565b8060000151915050919050565b60405180590338823950565b600081905060006020828161211157fe5b061461212a576020818161212157fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61215581600461218b565b50565b61216582600283516121ac565b61217881836122ec90919063ffffffff16565b505050565b61218881600761218b565b50565b6121a8601f60058360ff16901b178361239790919063ffffffff16565b5050565b601781116121d8576121d38160058460ff16901b60ff16178461239790919063ffffffff16565b6122e7565b60ff8111612219576121fd601860058460ff16901b178461239790919063ffffffff16565b612213816001856123d79092919063ffffffff16565b506122e6565b61ffff811161225b5761223f601960058460ff16901b178461239790919063ffffffff16565b612255816002856123d79092919063ffffffff16565b506122e5565b63ffffffff811161229f57612283601a60058460ff16901b178461239790919063ffffffff16565b612299816004856123d79092919063ffffffff16565b506122e4565b67ffffffffffffffff81116122e3576122cb601b60058460ff16901b178461239790919063ffffffff16565b6122e1816008856123d79092919063ffffffff16565b505b5b5b5b5b505050565b6122f4612524565b826020015183600001515183510111156123245761232383600261231d8660200151865161243e565b0261245a565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811061236b5781518352602083019250602082019150602081039050612348565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156123bd576123bc82600284602001510261245a565b5b815180516020818301018381536001820183525050505050565b6123df612524565b83602001518460000151518301111561240d5761240c84600261240687602001518661243e565b0261245a565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561245057829050612454565b8190505b92915050565b60608260000151905061246d8383612100565b61247783826122ec565b50505050565b60405180608001604052806004905b606081526020019060019003908161248c5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124e557805160ff1916838001178555612513565b82800160010185558215612513579182015b828111156125125782518255916020019190600101906124f7565b5b509050612520919061253e565b5090565b604051806040016040528060608152602001600081525090565b61256091905b8082111561255c576000816000905550600101612544565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea2646970667358221220d227feac9b53ce3e421ba63db97525f3f73dc8176f2e8301ffb2cccbcab22d9464736f6c6343000602003350726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806327dc297e1461004f57806338bbfa5014610121578063a2e620451461028a578063dc34b0aa14610294578063fbddd14b146102bf575b600080fd5b34801561005b57600080fd5b5061011f6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102ea565b005b34801561012d57600080fd5b506102886004803603606081101561014457600080fd5b81019080803590602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020257600080fd5b82018360208201111561021457600080fd5b8035906020019184600183028401116401000000008311171561023657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061032d565b005b61029261049c565b005b3480156102a057600080fd5b506102a9610509565b6040518082815260200191505060405180910390f35b3480156102cb57600080fd5b506102d461050f565b6040518082815260200191505060405180910390f35b610329828260006040519080825280601f01601f1916602001820160405280156103235781602001600182028038833980820191505090505b5061032d565b5050565b6103356105c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f4572726f7200000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60006002836040516020018082805190602001908083835b6020831061041057805182526020820191506020810190506020830392506103ed565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161045557fe5b069050806005819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a150505050565b6000809050600062030d40905060006104b7836001846108e5565b90507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260348152602001806125646034913960400191505060405180910390a1505050565b60055481565b60008060405180807f74657374000000000000000000000000000000000000000000000000000000008152506004019050604051809103902090506105bf816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f746573740000000000000000000000000000000000000000000000000000000081525061032d565b8091505090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061064e5750600061064c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b1561065f5761065d6000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106c957600080fd5b505af11580156106dd573d6000803e3d6000fd5b505050506040513d60208110156106f357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461083c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107c157600080fd5b505af11580156107d5573d6000803e3d6000fd5b505050506040513d60208110156107eb57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050506040513d60208110156108cf57600080fd5b8101908080519060200190929190505050905090565b600080831180156108f7575060208311155b61090057600080fd5b600a84029350606060016040519080825280601f01601f19166020018201604052801561093c5781602001600182028038833980820191505090505b5090508360f81b8160008151811061095057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156109b55781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156109ee5781602001600182028038833980820191505090505b50905060006109fb610e9c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610a4f5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610a8e5781602001600182028038833980820191505090505b509050610aa182601860088460006111b9565b50610aaa61247d565b60405180608001604052808781526020018881526020018681526020018481525090506000610b0f6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611218565b9050606060086040519080825280601f01601f191660200182016040528015610b475781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350610e6d828285600160048110610c8657fe5b6020020151600287600060048110610c9a57fe5b60200201516040518082805190602001908083835b60208310610cd25780518252602082019150602081019050602083039250610caf565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610d14573d6000803e3d6000fd5b5050506040513d6020811015610d2957600080fd5b810190808051906020019092919050505087600260048110610d4757fe5b60200201516040516020018085805190602001908083835b60208310610d825780518252602082019150602081019050602083039250610d5f565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310610dd35780518252602082019150602081019050602083039250610db0565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310610e2a5780518252602082019150602081019050602083039250610e07565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611585565b8199505050505050505050509392505050565b6000813b9050919050565b6000610e956115a1565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f2457506000610f22600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b15610f3557610f336000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f9f57600080fd5b505af1158015610fb3573d6000803e3d6000fd5b505050506040513d6020811015610fc957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461111257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561109757600080fd5b505af11580156110ab573d6000803e3d6000fd5b505050506040513d60208110156110c157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117957600080fd5b505afa15801561118d573d6000803e3d6000fd5b505050506040513d60208110156111a357600080fd5b8101908080519060200190929190505050905090565b60606000828501905080845110156111d057600080fd5b600086602001905060008460200190505b86886020010182101561120957818901518082880152506020820191506020810190506111e1565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112a05750600061129e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b156112b1576112af6000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050506040513d602081101561134557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461148e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561141357600080fd5b505af1158015611427573d6000803e3d6000fd5b505050506040513d602081101561143d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b606060046040519080825280602002602001820160405280156114c557816020015b60608152602001906001900390816114b05790505b509050836000600481106114d557fe5b6020020151816000815181106114e757fe5b6020026020010181905250836001600481106114ff57fe5b60200201518160018151811061151157fe5b60200260200101819052508360026004811061152957fe5b60200201518160028151811061153b57fe5b60200260200101819052508360036004811061155357fe5b60200201518160038151811061156557fe5b602002602001018190525061157b858285611af8565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000806115c1731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e80565b111561166357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061165a6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061205a565b60019050611af5565b600061168273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e80565b11156117245773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061171b6040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061205a565b60019050611af5565b600061174373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e80565b11156117e55773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117dc6040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061205a565b60019050611af5565b600061180473146500cfd35b22e4a392fe0adc06de1a1368ed48610e80565b11156118a65773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061189d6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061205a565b60019050611af5565b60006118c573a2998efd205fb9d4b4963afb70778d6354ad3a41610e80565b11156119675773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061195e6040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061205a565b60019050611af5565b6000611986736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e80565b11156119ea57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611af5565b6000611a097320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e80565b1115611a6d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611af5565b6000611a8c7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e80565b1115611af0577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611af5565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b8057506000611b7e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e80565b145b15611b9157611b8f6000610e8b565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611bfb57600080fd5b505af1158015611c0f573d6000803e3d6000fd5b505050506040513d6020811015611c2557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d6e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cf357600080fd5b505af1158015611d07573d6000803e3d6000fd5b505050506040513d6020811015611d1d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611e04578082015181840152602081019050611de9565b50505050905090810190601f168015611e315780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611e5157600080fd5b505af1158015611e65573d6000803e3d6000fd5b505050506040513d6020811015611e7b57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115611eae576000801b915050612053565b6060611eb985612074565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015611f5d578082015181840152602081019050611f42565b50505050905090810190601f168015611f8a5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611fc3578082015181840152602081019050611fa8565b50505050905090810190601f168015611ff05780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561201257600080fd5b505af1158015612026573d6000803e3d6000fd5b50505050506040513d602081101561203d57600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906120709291906124a4565b5050565b606061207e6120f4565b612086612524565b61209281610400612100565b61209b8161214a565b60008090505b83518110156120dd576120d08482815181106120b957fe5b60200260200101518361215890919063ffffffff16565b80806001019150506120a1565b506120e78161217d565b8060000151915050919050565b60405180590338823950565b600081905060006020828161211157fe5b061461212a576020818161212157fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61215581600461218b565b50565b61216582600283516121ac565b61217881836122ec90919063ffffffff16565b505050565b61218881600761218b565b50565b6121a8601f60058360ff16901b178361239790919063ffffffff16565b5050565b601781116121d8576121d38160058460ff16901b60ff16178461239790919063ffffffff16565b6122e7565b60ff8111612219576121fd601860058460ff16901b178461239790919063ffffffff16565b612213816001856123d79092919063ffffffff16565b506122e6565b61ffff811161225b5761223f601960058460ff16901b178461239790919063ffffffff16565b612255816002856123d79092919063ffffffff16565b506122e5565b63ffffffff811161229f57612283601a60058460ff16901b178461239790919063ffffffff16565b612299816004856123d79092919063ffffffff16565b506122e4565b67ffffffffffffffff81116122e3576122cb601b60058460ff16901b178461239790919063ffffffff16565b6122e1816008856123d79092919063ffffffff16565b505b5b5b5b5b505050565b6122f4612524565b826020015183600001515183510111156123245761232383600261231d8660200151865161243e565b0261245a565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811061236b5781518352602083019250602082019150602081039050612348565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156123bd576123bc82600284602001510261245a565b5b815180516020818301018381536001820183525050505050565b6123df612524565b83602001518460000151518301111561240d5761240c84600261240687602001518661243e565b0261245a565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561245057829050612454565b8190505b92915050565b60608260000151905061246d8383612100565b61247783826122ec565b50505050565b60405180608001604052806004905b606081526020019060019003908161248c5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124e557805160ff1916838001178555612513565b82800160010185558215612513579182015b828111156125125782518255916020019190600101906124f7565b5b509050612520919061253e565b5090565b604051806040016040528060608152602001600081525090565b61256091905b8082111561255c576000816000905550600101612544565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea2646970667358221220d227feac9b53ce3e421ba63db97525f3f73dc8176f2e8301ffb2cccbcab22d9464736f6c63430006020033",
  "sourceMap": "55:1517:3:-:0;;;297:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;297:62:3;343:8;:6;;;:8;;:::i;:::-;55:1517;;850:445;917:29;949:1;917:33;;961:24;988:6;961:33;;1034:15;1052:144;1092:21;143:1;1169:16;1052:25;;;:144;;:::i;:::-;1034:162;;1212:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:445;;;:::o;46187:2689:4:-;46289:16;46337:1;46327:7;:11;46326:32;;;;;46355:2;46344:7;:13;;46326:32;46318:41;;;;;;46380:2;46370:12;;;;46439:19;46471:1;46461:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46461:12:4;;;;46439:34;;46507:7;46496:20;;46484:6;46491:1;46484:9;;;;;;;;;;;:32;;;;;;;;;;;46527:19;46559:2;46549:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46549:13:4;;;;46527:35;;46573:27;46613:2;46603:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46603:13:4;;;;46573:43;;46627:30;46660:40;:38;;;:40;;:::i;:::-;46627:73;;46750:4;46742:6;46735:20;47107:11;47095:10;47091:28;47086:1;47076:8;47072:16;47062:27;47058:62;47051:4;47043:6;47039:17;47032:89;47158:4;47142:14;47135:28;47211:22;47204:4;47188:14;47184:25;47177:57;47255:18;47286:2;47276:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47276:13:4;;;;47255:34;;47349:6;47342:4;47335:5;47331:16;47324:32;47377:25;47415:1;47405:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47405:12:4;;;;47377:40;;47428;47438:5;47445:2;47449:1;47452:12;47466:1;47428:9;;;:40;;:::i;:::-;;47479:20;;:::i;:::-;:62;;;;;;;;47503:6;47479:62;;;;47511:6;47479:62;;;;47519:14;47479:62;;;;47535:5;47479:62;;;;;47552:15;47570:47;;;;;;;;;;;;;;;;;;47595:4;47601:15;47570:14;;;:47;;:::i;:::-;47552:65;;47628:30;47671:1;47661:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47661:12:4;;;;47628:45;;47741:4;47727:12;47723:23;47717:30;47806:65;47803:1;47799:73;47792:4;47773:17;47769:28;47761:112;47932:63;47929:1;47925:71;47918:4;47899:17;47895:28;47887:110;48056:61;48053:1;48049:69;48042:4;48023:17;48019:28;48011:108;48178:59;48175:1;48171:67;48164:4;48145:17;48141:28;48133:106;48298:57;48295:1;48291:65;48284:4;48265:17;48261:28;48253:104;48416:55;48413:1;48409:63;48402:4;48383:17;48379:28;48371:102;48532:53;48529:1;48525:61;48518:4;48499:17;48495:28;48487:100;48646:51;48643:1;48639:59;48632:4;48613:17;48609:28;48601:98;47693:1017;48720:123;48752:7;48788:17;48807:4;48812:1;48807:7;;;;;;;;;;;48816:15;48823:4;48828:1;48823:7;;;;;;;;;;;48816:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48816:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48816:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48816:15:4;;;;;;;;;;;;;;;;48833:4;48838:1;48833:7;;;;;;;;;;;48771:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48771:70:4;;;48761:81;;;;;;48720:31;;;:123;;:::i;:::-;48861:7;48854:14;;;;;;;;;;;46187:2689;;;;;:::o;38557:171::-;38637:23;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;;;:25;;:::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;;;:35;;:::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38680:8:::1;::::0;::::1;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;38680:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38680:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;38680:40:4;;;;;;;;;;;;;;;;38673:47;;38557:171:::0;:::o;55647:707::-;55775:25;55813:14;55840:9;55830:7;:19;55813:36;;55882:9;55868:3;:10;:23;;55860:32;;;;;;55948:6;55962:11;55957:2;:16;55948:25;;56065:6;56079:9;56074:2;:14;56065:23;;56099:227;56130:7;56116:11;56111:2;:16;:26;56106:1;:32;56099:227;;;56211:1;56204:5;56200:13;56194:20;56252:3;56248:1;56243:3;56239:11;56232:24;56164:107;56290:2;56285:7;;;;56312:2;56307:7;;;;56099:227;;;56343:3;56336:10;;;;;55647:707;;;;;;;:::o;35894:384::-;36014:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;;;:25;;:::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;;;:35;;:::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;36038:22:::1;36075:1;36063:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36038:39;;36101:5;36107:1;36101:8;;;;;;;;;;;36088:7;36096:1;36088:10;;;;;;;;;;;;;:21;;;;36133:5;36139:1;36133:8;;;;;;;;;;;36120:7;36128:1;36120:10;;;;;;;;;;;;;:21;;;;36165:5;36171:1;36165:8;;;;;;;;;;;36152:7;36160:1;36152:10;;;;;;;;;;;;;:21;;;;36197:5;36203:1;36197:8;;;;;;;;;;;36184:7;36192:1;36184:10;;;;;;;;;;;;;:21;;;;36223:47;36238:11;36251:7;36260:9;36223:14;;;:47;;:::i;:::-;36216:54;;;35894:384:::0;;;;;:::o;48884:154::-;49019:11;48984:22;:32;49007:8;48984:32;;;;;;;;;;;:46;;;;48884:154;;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;;;:21;;:::i;:::-;13110:28;;12938:208;;;:::o;30296:462::-;30415:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;;;:25;;:::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;;;:35;;:::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;30439:10:::1;30452:8:::0;::::1;;;;;;;;;;:17;;;30470:11;30483:9;30452:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30452:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30452:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30452:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30452:41:4;;;;;;;;;;;;;;;;30439:54;;30540:9;30526:11;:23;30516:7;:33;30508:5;:41;30504:109;;;30573:1;30566:8:::0;::::1;;;;;;30504:109;30623:17;30643:14;30651:5;30643:7;;;:14;;:::i;:::-;30623:34;;30675:8;::::0;::::1;;;;;;;;;:28;;;30711:5;30718:1;30721:11;30734:4;30740:9;30675:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30675:75:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30675:75:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30675:75:4;;;;;;;;;;;;;;;;30668:82;;;;12444:1;30296:462:::0;;;;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;;;:55;;:::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;;;:55;;:::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;;;:55;;:::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;;;:55;;:::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;;;:55;;:::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;;;:55;;:::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;;;:55;;:::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;;;:55;;:::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;45804:375::-;45865:26;45904:19;:17;;;:19;;:::i;:::-;45934:24;;:::i;:::-;45969:22;45981:3;45986:4;45969:11;;;;;:22;;:::i;:::-;46002:16;:3;:14;;;;;:16;;:::i;:::-;46034:6;46043:1;46034:10;;46029:90;46050:4;:11;46046:1;:15;46029:90;;;46083:24;46099:4;46104:1;46099:7;;;;;;;;;;;;;;46083:3;:15;;;;;;:24;;;;:::i;:::-;46063:3;;;;;;;46029:90;;;;46129:17;:3;:15;;;;;:17;;:::i;:::-;46164:3;:7;;;46157:14;;;45804:375;;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;59301:179::-;59397:4;59391:11;59456:4;59447:7;59443:18;59431:10;59425:4;59416:46;59364:109;:::o;4419:446::-;4494:13;4510:9;4494:25;;4551:1;4545:2;4534:8;:13;;;;;;:18;4530:83;;4598:2;4587:8;:13;;;;;;4581:2;:20;4569:32;;;;4530:83;4639:8;4623:4;:13;;:24;;;;;4737:4;4731:11;4769:3;4763:4;4756:17;4799:1;4794:3;4787:14;4837:8;4832:3;4828:18;4822:4;4815:32;4705:153;;;;:::o;10795:130::-;10867:50;10894:4;8902:1;10867:26;;;:50;;:::i;:::-;10795:130;:::o;10400:181::-;10494:49;10505:4;8852:1;10529:6;:13;10494:10;;;:49;;:::i;:::-;10554:19;10566:6;10554:4;:11;;;;;;:19;;;;:::i;:::-;;10400:181;;:::o;11067:138::-;11140:57;11167:4;9067:1;11140:26;;;:57;;:::i;:::-;11067:138;:::o;9823:147::-;9924:38;9958:2;9953:1;9943:6;:11;;;;9942:18;9924:4;:11;;;;;;:38;;;;:::i;:::-;9823:147;;:::o;9077:738::-;9189:2;9179:6;:12;9175:633;;9208:42;9242:6;9237:1;9227:6;:11;;;;9226:22;;;9208:4;:11;;;;;;:42;;;;:::i;:::-;9175:633;;;9282:4;9272:6;:14;9268:540;;9303:38;9337:2;9332:1;9322:6;:11;;;;9321:18;9303:4;:11;;;;;;:38;;;;:::i;:::-;9356:25;9371:6;9379:1;9356:4;:14;;;;;;:25;;;;;:::i;:::-;;9268:540;;;9413:6;9403;:16;9399:409;;9436:38;9470:2;9465:1;9455:6;:11;;;;9454:18;9436:4;:11;;;;;;:38;;;;:::i;:::-;9489:25;9504:6;9512:1;9489:4;:14;;;;;;:25;;;;;:::i;:::-;;9399:409;;;9546:10;9536:6;:20;9532:276;;9573:38;9607:2;9602:1;9592:6;:11;;;;9591:18;9573:4;:11;;;;;;:38;;;;:::i;:::-;9626:25;9641:6;9649:1;9626:4;:14;;;;;;:25;;;;;:::i;:::-;;9532:276;;;9683:18;9673:6;:28;9669:139;;9718:38;9752:2;9747:1;9737:6;:11;;;;9736:18;9718:4;:11;;;;;;:38;;;;:::i;:::-;9771:25;9786:6;9794:1;9771:4;:14;;;;;;:25;;;;;:::i;:::-;;9669:139;9532:276;9399:409;9268:540;9175:633;9077:738;;;:::o;5513:1241::-;5592:21;;:::i;:::-;5663:4;:13;;;5645:4;:8;;;:15;5630:5;:12;:30;:46;5626:129;;;5693:50;5700:4;5741:1;5706:32;5710:4;:13;;;5725:5;:12;5706:3;;;:32;;:::i;:::-;:36;5693:6;;;:50;;:::i;:::-;5626:129;5765:9;5785:8;5804;5815:5;:12;5804:23;;5882:4;5876:11;5958:6;5952:13;6046:2;6037:6;6029;6025:19;6021:28;6013:36;;6170:5;6164:12;6156:6;6152:25;6144:6;6137:41;6234:2;6227:5;6223:14;6216:21;;5847:401;;6258:212;6271:2;6264:3;:9;6258:212;;6390:3;6384:10;6378:4;6371:24;6432:2;6424:10;;;;6456:2;6449:9;;;;6282:2;6275:9;;;;6258:212;;;6480:9;6512:1;6505:3;6500:2;:8;6492:3;:17;:21;6480:33;;6607:4;6603:9;6597:3;6591:10;6587:26;6660:4;6653;6647:11;6643:22;6705:7;6695:8;6692:21;6686:4;6679:35;6557:168;;6742:4;6735:11;;;;;;5513:1241;;;;:::o;7010:586::-;7110:4;:13;;;7106:1;7088:4;:8;;;:15;:19;:35;7084:99;;;7140:31;7147:4;7169:1;7153:4;:13;;;:17;7140:6;;;:31;;:::i;:::-;7084:99;7237:4;7231:11;7313:6;7307:13;7405:2;7396:6;7388;7384:19;7380:28;7504:5;7498:4;7490:20;7551:1;7543:6;7539:14;7531:6;7524:30;7202:387;;;;;:::o;7898:748::-;7983:21;;:::i;:::-;8046:4;:13;;;8028:4;:8;;;:15;8021:4;:22;:38;8017:113;;;8076:42;8083:4;8116:1;8089:24;8093:4;:13;;;8108:4;8089:3;;;:24;;:::i;:::-;:28;8076:6;;;:42;;:::i;:::-;8017:113;8140:9;8166:1;8159:4;8152:3;:11;:15;8140:27;;8222:4;8216:11;8298:6;8292:13;8390:4;8381:6;8373;8369:19;8365:30;8528:5;8520:4;8516:9;8509:4;8503:11;8499:27;8496:38;8490:4;8483:52;8576:4;8568:6;8564:17;8556:6;8549:33;8187:430;;;8634:4;8627:11;;;7898:748;;;;;:::o;5058:151::-;5111:9;5142:2;5137;:7;5133:49;;;5168:2;5161:9;;;;5133:49;5199:2;5192:9;;5058:151;;;;;:::o;4873:177::-;4949:19;4971:4;:8;;;4949:30;;4990:21;4995:4;5001:9;4990:4;;;:21;;:::i;:::-;5022:20;5029:4;5035:6;5022;;;:20;;:::i;:::-;;4873:177;;;:::o;55:1517:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "55:1517:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15744:132:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15744:132:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15744:132:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15744:132:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15744:132:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15744:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15744:132:4;;;;;;;;;;;;;;;:::i;:::-;;455:387:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:387:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;455:387:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;455:387:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;455:387:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;455:387:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;455:387:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;455:387:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;455:387:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;455:387:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;455:387:3;;;;;;;;;;;;;;;:::i;:::-;;850:445;;;:::i;:::-;;151:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;151:27:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1303:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:266:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15744:132:4;15828:40;15839:5;15846:7;15865:1;15855:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15855:12:4;;;;15828:10;:40::i;:::-;15744:132;;:::o;455:387:3:-;601:20;:18;:20::i;:::-;587:34;;:10;:34;;;579:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:20;744:1;731:7;714:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;714:25:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;714:25:3;;;704:36;;;;;;696:45;;:49;;;;;;673:72;;771:12;756;:27;;;;799:35;821:12;799:35;;;;;;;;;;;;;;;;;;455:387;;;;:::o;850:445::-;917:29;949:1;917:33;;961:24;988:6;961:33;;1034:15;1052:144;1092:21;143:1;1169:16;1052:25;:144::i;:::-;1034:162;;1212:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:445;;;:::o;151:27::-;;;;:::o;1303:266::-;1341:7;1442:15;1468:17;;;;;;;;;;;;;;;;;;;1442:44;;1497:39;1508:7;1497:39;;;;;;;;;;;;;;;;;1522:13;;;;;;;;;;;;;;;;;1497:10;:39::i;:::-;1554:7;1547:14;;;1303:266;:::o;38114:132:4:-;38174:24;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38218:8:::1;::::0;::::1;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;38218:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38218:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;38218:20:4;;;;;;;;;;;;;;;;38211:27;;38114:132:::0;:::o;46187:2689::-;46289:16;46337:1;46327:7;:11;46326:32;;;;;46355:2;46344:7;:13;;46326:32;46318:41;;;;;;46380:2;46370:12;;;;46439:19;46471:1;46461:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46461:12:4;;;;46439:34;;46507:7;46496:20;;46484:6;46491:1;46484:9;;;;;;;;;;;:32;;;;;;;;;;;46527:19;46559:2;46549:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46549:13:4;;;;46527:35;;46573:27;46613:2;46603:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46603:13:4;;;;46573:43;;46627:30;46660:40;:38;:40::i;:::-;46627:73;;46750:4;46742:6;46735:20;47107:11;47095:10;47091:28;47086:1;47076:8;47072:16;47062:27;47058:62;47051:4;47043:6;47039:17;47032:89;47158:4;47142:14;47135:28;47211:22;47204:4;47188:14;47184:25;47177:57;47255:18;47286:2;47276:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47276:13:4;;;;47255:34;;47349:6;47342:4;47335:5;47331:16;47324:32;47377:25;47415:1;47405:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47405:12:4;;;;47377:40;;47428;47438:5;47445:2;47449:1;47452:12;47466:1;47428:9;:40::i;:::-;;47479:20;;:::i;:::-;:62;;;;;;;;47503:6;47479:62;;;;47511:6;47479:62;;;;47519:14;47479:62;;;;47535:5;47479:62;;;;;47552:15;47570:47;;;;;;;;;;;;;;;;;;47595:4;47601:15;47570:14;:47::i;:::-;47552:65;;47628:30;47671:1;47661:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47661:12:4;;;;47628:45;;47741:4;47727:12;47723:23;47717:30;47806:65;47803:1;47799:73;47792:4;47773:17;47769:28;47761:112;47932:63;47929:1;47925:71;47918:4;47899:17;47895:28;47887:110;48056:61;48053:1;48049:69;48042:4;48023:17;48019:28;48011:108;48178:59;48175:1;48171:67;48164:4;48145:17;48141:28;48133:106;48298:57;48295:1;48291:65;48284:4;48265:17;48261:28;48253:104;48416:55;48413:1;48409:63;48402:4;48383:17;48379:28;48371:102;48532:53;48529:1;48525:61;48518:4;48499:17;48495:28;48487:100;48646:51;48643:1;48639:59;48632:4;48613:17;48609:28;48601:98;47693:1017;48720:123;48752:7;48788:17;48807:4;48812:1;48807:7;;;;;;;;;;;48816:15;48823:4;48828:1;48823:7;;;;;;;;;;;48816:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48816:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48816:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48816:15:4;;;;;;;;;;;;;;;;48833:4;48838:1;48833:7;;;;;;;;;;;48771:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48771:70:4;;;48761:81;;;;;;48720:31;:123::i;:::-;48861:7;48854:14;;;;;;;;;;;46187:2689;;;;;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;:21::i;:::-;13110:28;;12938:208;;;:::o;38557:171::-;38637:23;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38680:8:::1;::::0;::::1;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;38680:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38680:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;38680:40:4;;;;;;;;;;;;;;;;38673:47;;38557:171:::0;:::o;55647:707::-;55775:25;55813:14;55840:9;55830:7;:19;55813:36;;55882:9;55868:3;:10;:23;;55860:32;;;;;;55948:6;55962:11;55957:2;:16;55948:25;;56065:6;56079:9;56074:2;:14;56065:23;;56099:227;56130:7;56116:11;56111:2;:16;:26;56106:1;:32;56099:227;;;56211:1;56204:5;56200:13;56194:20;56252:3;56248:1;56243:3;56239:11;56232:24;56164:107;56290:2;56285:7;;;;56312:2;56307:7;;;;56099:227;;;56343:3;56336:10;;;;;55647:707;;;;;;;:::o;35894:384::-;36014:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;36038:22:::1;36075:1;36063:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36038:39;;36101:5;36107:1;36101:8;;;;;;;;;;;36088:7;36096:1;36088:10;;;;;;;;;;;;;:21;;;;36133:5;36139:1;36133:8;;;;;;;;;;;36120:7;36128:1;36120:10;;;;;;;;;;;;;:21;;;;36165:5;36171:1;36165:8;;;;;;;;;;;36152:7;36160:1;36152:10;;;;;;;;;;;;;:21;;;;36197:5;36203:1;36197:8;;;;;;;;;;;36184:7;36192:1;36184:10;;;;;;;;;;;;;:21;;;;36223:47;36238:11;36251:7;36260:9;36223:14;:47::i;:::-;36216:54;;;35894:384:::0;;;;;:::o;48884:154::-;49019:11;48984:22;:32;49007:8;48984:32;;;;;;;;;;;:46;;;;48884:154;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;:55::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;:55::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;:55::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;:55::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;:55::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;:55::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;:55::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;:55::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;30296:462::-;30415:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;30439:10:::1;30452:8:::0;::::1;;;;;;;;;;:17;;;30470:11;30483:9;30452:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30452:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30452:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30452:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30452:41:4;;;;;;;;;;;;;;;;30439:54;;30540:9;30526:11;:23;30516:7;:33;30508:5;:41;30504:109;;;30573:1;30566:8:::0;::::1;;;;;;30504:109;30623:17;30643:14;30651:5;30643:7;:14::i;:::-;30623:34;;30675:8;::::0;::::1;;;;;;;;;:28;;;30711:5;30718:1;30721:11;30734:4;30740:9;30675:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30675:75:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30675:75:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30675:75:4;;;;;;;;;;;;;;;;30668:82;;;;12444:1;30296:462:::0;;;;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;45804:375::-;45865:26;45904:19;:17;:19::i;:::-;45934:24;;:::i;:::-;45969:22;45981:3;45986:4;45969:11;:22::i;:::-;46002:16;:3;:14;:16::i;:::-;46034:6;46043:1;46034:10;;46029:90;46050:4;:11;46046:1;:15;46029:90;;;46083:24;46099:4;46104:1;46099:7;;;;;;;;;;;;;;46083:3;:15;;:24;;;;:::i;:::-;46063:3;;;;;;;46029:90;;;;46129:17;:3;:15;:17::i;:::-;46164:3;:7;;;46157:14;;;45804:375;;;:::o;59301:179::-;59397:4;59391:11;59456:4;59447:7;59443:18;59431:10;59425:4;59416:46;59364:109;:::o;4419:446::-;4494:13;4510:9;4494:25;;4551:1;4545:2;4534:8;:13;;;;;;:18;4530:83;;4598:2;4587:8;:13;;;;;;4581:2;:20;4569:32;;;;4530:83;4639:8;4623:4;:13;;:24;;;;;4737:4;4731:11;4769:3;4763:4;4756:17;4799:1;4794:3;4787:14;4837:8;4832:3;4828:18;4822:4;4815:32;4705:153;;;;:::o;10795:130::-;10867:50;10894:4;8902:1;10867:26;:50::i;:::-;10795:130;:::o;10400:181::-;10494:49;10505:4;8852:1;10529:6;:13;10494:10;:49::i;:::-;10554:19;10566:6;10554:4;:11;;:19;;;;:::i;:::-;;10400:181;;:::o;11067:138::-;11140:57;11167:4;9067:1;11140:26;:57::i;:::-;11067:138;:::o;9823:147::-;9924:38;9958:2;9953:1;9943:6;:11;;;;9942:18;9924:4;:11;;:38;;;;:::i;:::-;9823:147;;:::o;9077:738::-;9189:2;9179:6;:12;9175:633;;9208:42;9242:6;9237:1;9227:6;:11;;;;9226:22;;;9208:4;:11;;:42;;;;:::i;:::-;9175:633;;;9282:4;9272:6;:14;9268:540;;9303:38;9337:2;9332:1;9322:6;:11;;;;9321:18;9303:4;:11;;:38;;;;:::i;:::-;9356:25;9371:6;9379:1;9356:4;:14;;:25;;;;;:::i;:::-;;9268:540;;;9413:6;9403;:16;9399:409;;9436:38;9470:2;9465:1;9455:6;:11;;;;9454:18;9436:4;:11;;:38;;;;:::i;:::-;9489:25;9504:6;9512:1;9489:4;:14;;:25;;;;;:::i;:::-;;9399:409;;;9546:10;9536:6;:20;9532:276;;9573:38;9607:2;9602:1;9592:6;:11;;;;9591:18;9573:4;:11;;:38;;;;:::i;:::-;9626:25;9641:6;9649:1;9626:4;:14;;:25;;;;;:::i;:::-;;9532:276;;;9683:18;9673:6;:28;9669:139;;9718:38;9752:2;9747:1;9737:6;:11;;;;9736:18;9718:4;:11;;:38;;;;:::i;:::-;9771:25;9786:6;9794:1;9771:4;:14;;:25;;;;;:::i;:::-;;9669:139;9532:276;9399:409;9268:540;9175:633;9077:738;;;:::o;5513:1241::-;5592:21;;:::i;:::-;5663:4;:13;;;5645:4;:8;;;:15;5630:5;:12;:30;:46;5626:129;;;5693:50;5700:4;5741:1;5706:32;5710:4;:13;;;5725:5;:12;5706:3;:32::i;:::-;:36;5693:6;:50::i;:::-;5626:129;5765:9;5785:8;5804;5815:5;:12;5804:23;;5882:4;5876:11;5958:6;5952:13;6046:2;6037:6;6029;6025:19;6021:28;6013:36;;6170:5;6164:12;6156:6;6152:25;6144:6;6137:41;6234:2;6227:5;6223:14;6216:21;;5847:401;;6258:212;6271:2;6264:3;:9;6258:212;;6390:3;6384:10;6378:4;6371:24;6432:2;6424:10;;;;6456:2;6449:9;;;;6282:2;6275:9;;;;6258:212;;;6480:9;6512:1;6505:3;6500:2;:8;6492:3;:17;:21;6480:33;;6607:4;6603:9;6597:3;6591:10;6587:26;6660:4;6653;6647:11;6643:22;6705:7;6695:8;6692:21;6686:4;6679:35;6557:168;;6742:4;6735:11;;;;;;5513:1241;;;;:::o;7010:586::-;7110:4;:13;;;7106:1;7088:4;:8;;;:15;:19;:35;7084:99;;;7140:31;7147:4;7169:1;7153:4;:13;;;:17;7140:6;:31::i;:::-;7084:99;7237:4;7231:11;7313:6;7307:13;7405:2;7396:6;7388;7384:19;7380:28;7504:5;7498:4;7490:20;7551:1;7543:6;7539:14;7531:6;7524:30;7202:387;;;;;:::o;7898:748::-;7983:21;;:::i;:::-;8046:4;:13;;;8028:4;:8;;;:15;8021:4;:22;:38;8017:113;;;8076:42;8083:4;8116:1;8089:24;8093:4;:13;;;8108:4;8089:3;:24::i;:::-;:28;8076:6;:42::i;:::-;8017:113;8140:9;8166:1;8159:4;8152:3;:11;:15;8140:27;;8222:4;8216:11;8298:6;8292:13;8390:4;8381:6;8373;8369:19;8365:30;8528:5;8520:4;8516:9;8509:4;8503:11;8499:27;8496:38;8490:4;8483:52;8576:4;8568:6;8564:17;8556:6;8549:33;8187:430;;;8634:4;8627:11;;;7898:748;;;;;:::o;5058:151::-;5111:9;5142:2;5137;:7;5133:49;;;5168:2;5161:9;;;;5133:49;5199:2;5192:9;;5058:151;;;;;:::o;4873:177::-;4949:19;4971:4;:8;;;4949:30;;4990:21;4995:4;5001:9;4990:4;:21::i;:::-;5022:20;5029:4;5035:6;5022;:20::i;:::-;;4873:177;;;:::o;55:1517:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.6.2;\r\nimport \"./provableAPI.sol\";\r\n\r\ncontract Random is usingProvable {\r\n\r\n    uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\r\n    uint256 public latestNumber;\r\n\r\n    event LogNewProvableQuery(string description);\r\n    event generatedRandomNumber(uint256 randomNumber);\r\n\r\n    constructor()\r\n        public\r\n    {\r\n        update();\r\n    }\r\n    // try to map multiple games and multiple callbacks for multiple users playing games\r\n    function  __callback(bytes32 _queryId, string memory _result, bytes memory _proof) public override(usingProvable){\r\n        require(msg.sender == provable_cbAddress(),\"Error\");\r\n        //tide queryId to user\r\n        uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 2;\r\n        latestNumber = randomNumber;\r\n        emit generatedRandomNumber(randomNumber);\r\n    }\r\n\r\n    function update()\r\n        public\r\n        payable\r\n    {\r\n        uint256 QUERY_EXECUTION_DELAY = 0;\r\n        uint256 GAS_FOR_CALLBACK = 200000;\r\n        //unique id save it\r\n        bytes32 queryId = provable_newRandomDSQuery(\r\n            QUERY_EXECUTION_DELAY,\r\n            NUM_RANDOM_BYTES_REQUESTED,\r\n            GAS_FOR_CALLBACK\r\n        );\r\n        emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer.\");\r\n    }\r\n\r\n    function testRandom() public returns (bytes32){\r\n        //   bytes32 queryId = bytes32(keccak256(abi.encodePacked(msg.sender)));\r\n        bytes32 queryId = bytes32(keccak256(\"test\"));\r\n        __callback(queryId, \"1\", bytes(\"test\"));\r\n        return queryId;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Slaven\\source\\repos\\flip-coin\\contracts\\Random.sol",
  "ast": {
    "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol",
    "exportedSymbols": {
      "Random": [
        480
      ]
    },
    "id": 481,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 363,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 364,
        "nodeType": "ImportDirective",
        "scope": 481,
        "sourceUnit": 6892,
        "src": "24:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 365,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6891,
              "src": "74:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6891",
                "typeString": "contract usingProvable"
              }
            },
            "id": 366,
            "nodeType": "InheritanceSpecifier",
            "src": "74:13:3"
          }
        ],
        "contractDependencies": [
          6891
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 480,
        "linearizedBaseContracts": [
          480,
          6891
        ],
        "name": "Random",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 369,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 480,
            "src": "97:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "97:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "143:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "dc34b0aa",
            "id": 371,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 480,
            "src": "151:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 375,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 375,
                  "src": "213:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "212:20:3"
            },
            "src": "187:46:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 379,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 379,
                  "src": "267:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "266:22:3"
            },
            "src": "239:50:3"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "332:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 382,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "343:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "343:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 386,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:2:3"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:3"
            },
            "scope": 480,
            "src": "297:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1551
            ],
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "568:274:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "587:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "587:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 400,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4645,
                            "src": "601:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "601:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "587:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:7:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "579:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "579:51:3"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 428,
                      "src": "673:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "673:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 413,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 390,
                                  "src": "731:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 411,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "714:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "714:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "714:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 410,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "704:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "704:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "696:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "696:45:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "744:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "696:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "673:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "756:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "771:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "756:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "756:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "821:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 424,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "799:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "EmitStatement",
                  "src": "794:40:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 394,
                  "name": "usingProvable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6891,
                  "src": "554:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_usingProvable_$6891",
                    "typeString": "contract usingProvable"
                  }
                }
              ],
              "src": "545:23:3"
            },
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "476:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "494:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "517:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "475:62:3"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:3"
            },
            "scope": 480,
            "src": "455:387:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "906:389:3",
              "statements": [
                {
                  "assignments": [
                    433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 452,
                      "src": "917:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "917:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 435,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "949:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:33:3"
                },
                {
                  "assignments": [
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 437,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 452,
                      "src": "961:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "961:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "988:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "961:33:3"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 452,
                      "src": "1034:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1034:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "1092:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 444,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "1128:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 445,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1169:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 442,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5966,
                      "src": "1052:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:144:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1034:162:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:54:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 448,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "1212:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:75:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "EmitStatement",
                  "src": "1207:80:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a2e62045",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:3"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:3"
            },
            "scope": 480,
            "src": "850:445:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "1349:220:3",
              "statements": [
                {
                  "assignments": [
                    459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 459,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 478,
                      "src": "1442:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 458,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1442:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 466,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74657374",
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1478:6:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            },
                            "value": "test"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            }
                          ],
                          "id": 462,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1468:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1468:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1460:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1460:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1442:44:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "1508:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1517:3:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74657374",
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1528:6:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            },
                            "value": "test"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            }
                          ],
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1522:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 470,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1522:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1522:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 467,
                      "name": "__callback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        429,
                        1523
                      ],
                      "referencedDeclaration": 429,
                      "src": "1497:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,string memory,bytes memory)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "name": "queryId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 459,
                    "src": "1554:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 457,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "1547:14:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fbddd14b",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:2:3"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 479,
                  "src": "1341:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1340:9:3"
            },
            "scope": 480,
            "src": "1303:266:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 481,
        "src": "55:1517:3"
      }
    ],
    "src": "0:1572:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol",
    "exportedSymbols": {
      "Random": [
        480
      ]
    },
    "id": 481,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 363,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 364,
        "nodeType": "ImportDirective",
        "scope": 481,
        "sourceUnit": 6892,
        "src": "24:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 365,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6891,
              "src": "74:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6891",
                "typeString": "contract usingProvable"
              }
            },
            "id": 366,
            "nodeType": "InheritanceSpecifier",
            "src": "74:13:3"
          }
        ],
        "contractDependencies": [
          6891
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 480,
        "linearizedBaseContracts": [
          480,
          6891
        ],
        "name": "Random",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 369,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 480,
            "src": "97:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "97:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "143:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "dc34b0aa",
            "id": 371,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 480,
            "src": "151:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 375,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 375,
                  "src": "213:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "212:20:3"
            },
            "src": "187:46:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 379,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 379,
                  "src": "267:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "266:22:3"
            },
            "src": "239:50:3"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "332:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 382,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "343:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "343:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 386,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:2:3"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:3"
            },
            "scope": 480,
            "src": "297:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1551
            ],
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "568:274:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "587:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "587:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 400,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4645,
                            "src": "601:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "601:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "587:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:7:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "579:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "579:51:3"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 428,
                      "src": "673:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "673:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 413,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 390,
                                  "src": "731:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 411,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "714:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "714:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "714:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 410,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "704:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "704:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "696:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "696:45:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "744:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "696:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "673:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "756:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "771:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "756:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "756:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "821:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 424,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "799:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "EmitStatement",
                  "src": "794:40:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 394,
                  "name": "usingProvable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6891,
                  "src": "554:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_usingProvable_$6891",
                    "typeString": "contract usingProvable"
                  }
                }
              ],
              "src": "545:23:3"
            },
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "476:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "494:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "517:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "475:62:3"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:3"
            },
            "scope": 480,
            "src": "455:387:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "906:389:3",
              "statements": [
                {
                  "assignments": [
                    433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 452,
                      "src": "917:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "917:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 435,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "949:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:33:3"
                },
                {
                  "assignments": [
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 437,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 452,
                      "src": "961:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "961:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "988:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "961:33:3"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 452,
                      "src": "1034:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1034:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "1092:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 444,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "1128:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 445,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1169:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 442,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5966,
                      "src": "1052:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:144:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1034:162:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1232:54:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        },
                        "value": "Provable query was sent, standing by for the answer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6c372616915d6b08d584e4f07c9f4ab3ef233d2320a376fb7b417ddfb52cb9d5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer.\""
                        }
                      ],
                      "id": 448,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "1212:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:75:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "EmitStatement",
                  "src": "1207:80:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a2e62045",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:3"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:3"
            },
            "scope": 480,
            "src": "850:445:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "1349:220:3",
              "statements": [
                {
                  "assignments": [
                    459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 459,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 478,
                      "src": "1442:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 458,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1442:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 466,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74657374",
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1478:6:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            },
                            "value": "test"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            }
                          ],
                          "id": 462,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1468:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1468:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1460:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1460:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1442:44:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "1508:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1517:3:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74657374",
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1528:6:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            },
                            "value": "test"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                              "typeString": "literal_string \"test\""
                            }
                          ],
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1522:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 470,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1522:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1522:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 467,
                      "name": "__callback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        429,
                        1523
                      ],
                      "referencedDeclaration": 429,
                      "src": "1497:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,string memory,bytes memory)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "name": "queryId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 459,
                    "src": "1554:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 457,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "1547:14:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fbddd14b",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:2:3"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 479,
                  "src": "1341:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1340:9:3"
            },
            "scope": 480,
            "src": "1303:266:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 481,
        "src": "55:1517:3"
      }
    ],
    "src": "0:1572:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-07-20T14:42:04.028Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}