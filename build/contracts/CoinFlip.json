{
  "contractName": "CoinFlip",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "error",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "lowLevelData",
          "type": "bytes"
        }
      ],
      "name": "lowLevelError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bet",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "placedBet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomNum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRandom",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "randomNum",
          "type": "uint256"
        }
      ],
      "name": "flipCoin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"error\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"lowLevelData\",\"type\":\"bytes\"}],\"name\":\"lowLevelError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"placedBet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"randomNum\",\"type\":\"uint256\"}],\"name\":\"flipCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRandom\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Slaven/source/repos/flip-coin/contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Slaven/source/repos/flip-coin/contracts/CoinFlip.sol\":{\"keccak256\":\"0x4b7644267b91dd82f98bbfa05b7cf7bf7f8f27598b9ecda4f021d14adf327779\",\"urls\":[\"bzz-raw://6a13c7dd58f9a635271206e6d1523d2d0a1c09d2718b3f474e7068b555cf60f3\",\"dweb:/ipfs/Qmbo8Ntf5EcAY1gERk1vdvRubbaaiRsHyDrrvbrJ83pmV3\"]},\"/C/Users/Slaven/source/repos/flip-coin/contracts/Ownable.sol\":{\"keccak256\":\"0xe149ca69d32effffc651c016e2ea87ac837fc4766052b2dfcefb76b7ac3325e4\",\"urls\":[\"bzz-raw://6d20ac3f97067adf4645a5cc2978a01d5528e58f7d27c934505cde3f8aa3153f\",\"dweb:/ipfs/QmXJhn8dtQpJd7rKJrjLCLKQsZcwB2gLJXm4Cn3bnxMiMc\"]},\"/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol\":{\"keccak256\":\"0x637d375a362e785ecda984041656d3ce26da1eaf89d59375cf12b34e3687041a\",\"urls\":[\"bzz-raw://f703d810f3b21acccb28cb76601f542c91c62084298bd2b26d86bd2d613b3d3a\",\"dweb:/ipfs/QmTF6kNfBiMDCJ9jjF2ghKCbLuwRGoE7gbsW6PLRZSiwfg\"]},\"/C/Users/Slaven/source/repos/flip-coin/contracts/provableAPI.sol\":{\"keccak256\":\"0x1fc6722eebb007804dc77ee8e11687a961b4e544ccccf8af18d8f445e0f52a34\",\"urls\":[\"bzz-raw://eaf215a13707520c96593e2d662d8e3eb18ff439a05468bc8e453532fe1e8286\",\"dweb:/ipfs/QmSEi8wMqzGPjH6d6KbZJzz4SgvSAHgCMVgFNtHXmhCUvW\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063a2e6204511610059578063a2e6204514610385578063aacc5a171461038f578063b69ef8a8146103b1578063dc34b0aa146103dc578063fbddd14b1461040757610091565b806325b814f41461009657806327dc297e146100ad57806338bbfa501461017f5780635f5be1f4146102e85780638da5cb5b1461032e575b600080fd5b3480156100a257600080fd5b506100ab610432565b005b3480156100b957600080fd5b5061017d600480360360408110156100d057600080fd5b8101908080359060200190929190803590602001906401000000008111156100f757600080fd5b82018360208201111561010957600080fd5b8035906020019184600183028401116401000000008311171561012b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105d4565b005b34801561018b57600080fd5b506102e6600480360360608110156101a257600080fd5b8101908080359060200190929190803590602001906401000000008111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460018302840111640100000000831117156101fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561026057600080fd5b82018360208201111561027257600080fd5b8035906020019184600183028401116401000000008311171561029457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610617565b005b610314600480360360208110156102fe57600080fd5b8101908080359060200190929190505050610786565b604051808215151515815260200191505060405180910390f35b34801561033a57600080fd5b50610343610913565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61038d610938565b005b6103976109a5565b604051808215151515815260200191505060405180910390f35b3480156103bd57600080fd5b506103c6610d71565b6040518082815260200191505060405180910390f35b3480156103e857600080fd5b506103f1610d77565b6040518082815260200191505060405180910390f35b34801561041357600080fd5b5061041c610d7d565b6040518082815260200191505060405180910390f35b600061043c610d7d565b9050610446612e23565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610537576104a2610e34565b8160000181815250506001816060019015159081151581525050818160200181815250506104cf81610e4c565b6009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105d0565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050818160200181815250506105cf81610ed6565b5b5050565b610613828260006040519080825280601f01601f19166020018201604052801561060d5781602001600182028038833980820191505090505b50610617565b5050565b61061f610f60565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f4572726f7200000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60006002836040516020018082805190602001908083835b602083106106fa57805182526020820191506020810190506020830392506106d7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161073f57fe5b069050806006819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a150505050565b600066b1a2bc2ec5000080341015610806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f4572726f7200000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600080905060016002858161081757fe5b061415610881576001905034600b600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc600234029081150290604051600060405180830381858888f1935050505015801561087b573d6000803e3d6000fd5b50610892565b34600b600082825401925050819055505b7f6edcdfbf522a5ccd3739a1c2dc10320abcc2f082d7cbe0522393a43c4e6331ca333483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a18092505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d409050600061095383600184611282565b90507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389604051808060200182810382526034815260200180612f376034913960400191505060405180910390a1505050565b600066b1a2bc2ec5000080341015610a25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f4572726f7200000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b34471015610a9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f7420656e6f7567682066756e64732100000000000000000000000000000081525060200191505060405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325b814f46040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b0557600080fd5b505af1925050508015610b16575060015b610d68576000604051905060008152600115610bdf5760443d1015610b3e5760009050610bdf565b60046000803e60005160e01c6308c379a08114610b5f576000915050610bdf565b60043d036004833e81513d602482011167ffffffffffffffff82111715610b8b57600092505050610bdf565b808301805167ffffffffffffffff811115610bad576000945050505050610bdf565b8060208301013d8601811115610bcb57600095505050505050610bdf565b601f19601f82011660405282955050505050505b80610bea5750610c90565b7f24c93343bea44ff8f0e628ca4e5b87dfe0823d664c887457e166a03798bb191c816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c4c578082015181840152602081019050610c31565b50505050905090810190601f168015610c795780820380516001836020036101000a031916815260200191505b509250505060405180910390a16000925050610d6d565b3d8060008114610cbc576040519150601f19603f3d011682016040523d82523d6000602084013e610cc1565b606091505b507f6ec455eafedf108a7e30dedfd166258f472947380d60be381103ee68a240ac0a816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d24578082015181840152602081019050610d09565b50505050905090810190601f168015610d515780820380516001836020036101000a031916815260200191505b509250505060405180910390a16000925050610d6d565b600191505b5090565b600b5481565b60065481565b60008060405180807f7465737400000000000000000000000000000000000000000000000000000000815250600401905060405180910390209050610e2d816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f7465737400000000000000000000000000000000000000000000000000000000815250610617565b8091505090565b60006007600081548092919060010191905055905090565b600033905081600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050505050565b600033905081600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fe857506000610fe6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661181d565b145b15610ff957610ff76000611828565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561106357600080fd5b505af1158015611077573d6000803e3d6000fd5b505050506040513d602081101561108d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111d857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561115c57600080fd5b505af1158015611170573d6000803e3d6000fd5b505050506040513d602081101561118657600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561124257600080fd5b505af1158015611256573d6000803e3d6000fd5b505050506040513d602081101561126c57600080fd5b8101908080519060200190929190505050905090565b60008083118015611294575060208311155b61129d57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156112d95781602001600182028038833980820191505090505b5090508360f81b816000815181106112ed57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156113525781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f19166020018201604052801561138b5781602001600182028038833980820191505090505b5090506000611398611839565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156113ec5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f19166020018201604052801561142b5781602001600182028038833980820191505090505b50905061143e8260186008846000611b59565b50611447612e50565b604051806080016040528087815260200188815260200186815260200184815250905060006114ac6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611bb8565b9050606060086040519080825280601f01601f1916602001820160405280156114e45781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a01000000000000000000000000000000000000000000000000000081046022830153790100000000000000000000000000000000000000000000000000810460218301537801000000000000000000000000000000000000000000000000810460208301535061180a82828560016004811061162357fe5b602002015160028760006004811061163757fe5b60200201516040518082805190602001908083835b6020831061166f578051825260208201915060208101905060208303925061164c565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156116b1573d6000803e3d6000fd5b5050506040513d60208110156116c657600080fd5b8101908080519060200190929190505050876002600481106116e457fe5b60200201516040516020018085805190602001908083835b6020831061171f57805182526020820191506020810190506020830392506116fc565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611770578051825260208201915060208101905060208303925061174d565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106117c757805182526020820191506020810190506020830392506117a4565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611f27565b8199505050505050505050509392505050565b6000813b9050919050565b6000611832611f43565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806118c1575060006118bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661181d565b145b156118d2576118d06000611828565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561193c57600080fd5b505af1158015611950573d6000803e3d6000fd5b505050506040513d602081101561196657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ab157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a3557600080fd5b505af1158015611a49573d6000803e3d6000fd5b505050506040513d6020811015611a5f57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1957600080fd5b505afa158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611b7057600080fd5b600086602001905060008460200190505b868860200101821015611ba95781890151808288015250602082019150602081019050611b81565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c4057506000611c3e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661181d565b145b15611c5157611c4f6000611828565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cbb57600080fd5b505af1158015611ccf573d6000803e3d6000fd5b505050506040513d6020811015611ce557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e3057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611db457600080fd5b505af1158015611dc8573d6000803e3d6000fd5b505050506040513d6020811015611dde57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015611e6757816020015b6060815260200190600190039081611e525790505b50905083600060048110611e7757fe5b602002015181600081518110611e8957fe5b602002602001018190525083600160048110611ea157fe5b602002015181600181518110611eb357fe5b602002602001018190525083600260048110611ecb57fe5b602002015181600281518110611edd57fe5b602002602001018190525083600360048110611ef557fe5b602002015181600381518110611f0757fe5b6020026020010181905250611f1d85828561249a565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b600080611f63731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61181d565b111561200557731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ffc6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612a00565b60019050612497565b600061202473c03a2615d5efaf5f49f60b7bb6583eaec212fdf161181d565b11156120c65773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120bd6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612a00565b60019050612497565b60006120e573b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61181d565b11156121875773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061217e6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612a00565b60019050612497565b60006121a673146500cfd35b22e4a392fe0adc06de1a1368ed4861181d565b11156122485773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061223f6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612a00565b60019050612497565b600061226773a2998efd205fb9d4b4963afb70778d6354ad3a4161181d565b11156123095773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123006040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612a00565b60019050612497565b6000612328736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561181d565b111561238c57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612497565b60006123ab7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61181d565b111561240f577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612497565b600061242e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61181d565b1115612492577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612497565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061252257506000612520600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661181d565b145b15612533576125316000611828565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561259d57600080fd5b505af11580156125b1573d6000803e3d6000fd5b505050506040513d60208110156125c757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461271257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561269657600080fd5b505af11580156126aa573d6000803e3d6000fd5b505050506040513d60208110156126c057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156127a957808201518184015260208101905061278e565b50505050905090810190601f1680156127d65780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156127f657600080fd5b505af115801561280a573d6000803e3d6000fd5b505050506040513d602081101561282057600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612853576000801b9150506129f9565b606061285e85612a1a565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156129035780820151818401526020810190506128e8565b50505050905090810190601f1680156129305780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561296957808201518184015260208101905061294e565b50505050905090810190601f1680156129965780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156129b857600080fd5b505af11580156129cc573d6000803e3d6000fd5b50505050506040513d60208110156129e357600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060039080519060200190612a16929190612e77565b5050565b6060612a24612a9a565b612a2c612ef7565b612a3881610400612aa6565b612a4181612af0565b60008090505b8351811015612a8357612a76848281518110612a5f57fe5b602002602001015183612afe90919063ffffffff16565b8080600101915050612a47565b50612a8d81612b23565b8060000151915050919050565b60405180590338823950565b6000819050600060208281612ab757fe5b0614612ad05760208181612ac757fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b612afb816004612b31565b50565b612b0b8260028351612b52565b612b1e8183612c9290919063ffffffff16565b505050565b612b2e816007612b31565b50565b612b4e601f60058360ff16901b1783612d3d90919063ffffffff16565b5050565b60178111612b7e57612b798160058460ff16901b60ff161784612d3d90919063ffffffff16565b612c8d565b60ff8111612bbf57612ba3601860058460ff16901b1784612d3d90919063ffffffff16565b612bb981600185612d7d9092919063ffffffff16565b50612c8c565b61ffff8111612c0157612be5601960058460ff16901b1784612d3d90919063ffffffff16565b612bfb81600285612d7d9092919063ffffffff16565b50612c8b565b63ffffffff8111612c4557612c29601a60058460ff16901b1784612d3d90919063ffffffff16565b612c3f81600485612d7d9092919063ffffffff16565b50612c8a565b67ffffffffffffffff8111612c8957612c71601b60058460ff16901b1784612d3d90919063ffffffff16565b612c8781600885612d7d9092919063ffffffff16565b505b5b5b5b5b505050565b612c9a612ef7565b82602001518360000151518351011115612cca57612cc9836002612cc386602001518651612de4565b02612e00565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110612d115781518352602083019250602082019150602081039050612cee565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115612d6357612d62826002846020015102612e00565b5b815180516020818301018381536001820183525050505050565b612d85612ef7565b836020015184600001515183011115612db357612db2846002612dac876020015186612de4565b02612e00565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115612df657829050612dfa565b8190505b92915050565b606082600001519050612e138383612aa6565b612e1d8382612c92565b50505050565b60405180608001604052806000815260200160008019168152602001600081526020016000151581525090565b60405180608001604052806004905b6060815260200190600190039081612e5f5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612eb857805160ff1916838001178555612ee6565b82800160010185558215612ee6579182015b82811115612ee5578251825591602001919060010190612eca565b5b509050612ef39190612f11565b5090565b604051806040016040528060608152602001600081525090565b612f3391905b80821115612f2f576000816000905550600101612f17565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722ea2646970667358221220160d9683af8ee05a4fe41a704dcacd734ff06f5dddf3b238f43dfa5fa7ee008a64736f6c63430006020033",
  "sourceMap": "1135:1537:0:-:0;;;1365:127;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1365:127:0;;;;;;;;;;;;;;;;225:10:2;217:5;;:18;;;;;;;;;;;;;;;;;;343:8:3;:6;;;:8;;:::i;:::-;1429:13:0;1419:7;:23;;;;1467:17;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1467:17:0;1453:11;;:31;;;;;;;;;;;;;;;;;;1365:127;1135:1537;;850:445:3;917:29;949:1;917:33;;961:24;988:6;961:33;;1034:15;1052:144;1092:21;143:1;1169:16;1052:25;;;:144;;:::i;:::-;1034:162;;1212:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:445;;;:::o;46187:2689:4:-;46289:16;46337:1;46327:7;:11;46326:32;;;;;46355:2;46344:7;:13;;46326:32;46318:41;;;;;;46380:2;46370:12;;;;46439:19;46471:1;46461:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46461:12:4;;;;46439:34;;46507:7;46496:20;;46484:6;46491:1;46484:9;;;;;;;;;;;:32;;;;;;;;;;;46527:19;46559:2;46549:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46549:13:4;;;;46527:35;;46573:27;46613:2;46603:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46603:13:4;;;;46573:43;;46627:30;46660:40;:38;;;:40;;:::i;:::-;46627:73;;46750:4;46742:6;46735:20;47107:11;47095:10;47091:28;47086:1;47076:8;47072:16;47062:27;47058:62;47051:4;47043:6;47039:17;47032:89;47158:4;47142:14;47135:28;47211:22;47204:4;47188:14;47184:25;47177:57;47255:18;47286:2;47276:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47276:13:4;;;;47255:34;;47349:6;47342:4;47335:5;47331:16;47324:32;47377:25;47415:1;47405:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47405:12:4;;;;47377:40;;47428;47438:5;47445:2;47449:1;47452:12;47466:1;47428:9;;;:40;;:::i;:::-;;47479:20;;:::i;:::-;:62;;;;;;;;47503:6;47479:62;;;;47511:6;47479:62;;;;47519:14;47479:62;;;;47535:5;47479:62;;;;;47552:15;47570:47;;;;;;;;;;;;;;;;;;47595:4;47601:15;47570:14;;;:47;;:::i;:::-;47552:65;;47628:30;47671:1;47661:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47661:12:4;;;;47628:45;;47741:4;47727:12;47723:23;47717:30;47806:65;47803:1;47799:73;47792:4;47773:17;47769:28;47761:112;47932:63;47929:1;47925:71;47918:4;47899:17;47895:28;47887:110;48056:61;48053:1;48049:69;48042:4;48023:17;48019:28;48011:108;48178:59;48175:1;48171:67;48164:4;48145:17;48141:28;48133:106;48298:57;48295:1;48291:65;48284:4;48265:17;48261:28;48253:104;48416:55;48413:1;48409:63;48402:4;48383:17;48379:28;48371:102;48532:53;48529:1;48525:61;48518:4;48499:17;48495:28;48487:100;48646:51;48643:1;48639:59;48632:4;48613:17;48609:28;48601:98;47693:1017;48720:123;48752:7;48788:17;48807:4;48812:1;48807:7;;;;;;;;;;;48816:15;48823:4;48828:1;48823:7;;;;;;;;;;;48816:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48816:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48816:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48816:15:4;;;;;;;;;;;;;;;;48833:4;48838:1;48833:7;;;;;;;;;;;48771:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48771:70:4;;;48761:81;;;;;;48720:31;;;:123;;:::i;:::-;48861:7;48854:14;;;;;;;;;;;46187:2689;;;;;:::o;38557:171::-;38637:23;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;;;:25;;:::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;;;:35;;:::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38680:8:::1;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;38680:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38680:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;38680:40:4;;;;;;;;;;;;;;;;38673:47;;38557:171:::0;:::o;55647:707::-;55775:25;55813:14;55840:9;55830:7;:19;55813:36;;55882:9;55868:3;:10;:23;;55860:32;;;;;;55948:6;55962:11;55957:2;:16;55948:25;;56065:6;56079:9;56074:2;:14;56065:23;;56099:227;56130:7;56116:11;56111:2;:16;:26;56106:1;:32;56099:227;;;56211:1;56204:5;56200:13;56194:20;56252:3;56248:1;56243:3;56239:11;56232:24;56164:107;56290:2;56285:7;;;;56312:2;56307:7;;;;56099:227;;;56343:3;56336:10;;;;;55647:707;;;;;;;:::o;35894:384::-;36014:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;;;:25;;:::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;;;:35;;:::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;36038:22:::1;36075:1;36063:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36038:39;;36101:5;36107:1;36101:8;;;;;;;;;;;36088:7;36096:1;36088:10;;;;;;;;;;;;;:21;;;;36133:5;36139:1;36133:8;;;;;;;;;;;36120:7;36128:1;36120:10;;;;;;;;;;;;;:21;;;;36165:5;36171:1;36165:8;;;;;;;;;;;36152:7;36160:1;36152:10;;;;;;;;;;;;;:21;;;;36197:5;36203:1;36197:8;;;;;;;;;;;36184:7;36192:1;36184:10;;;;;;;;;;;;;:21;;;;36223:47;36238:11;36251:7;36260:9;36223:14;;;:47;;:::i;:::-;36216:54;;;35894:384:::0;;;;;:::o;48884:154::-;49019:11;48984:22;:32;49007:8;48984:32;;;;;;;;;;;:46;;;;48884:154;;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;;;:21;;:::i;:::-;13110:28;;12938:208;;;:::o;30296:462::-;30415:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;;;:25;;:::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;;;:35;;:::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;30439:10:::1;30452:8;;;;;;;;;;;:17;;;30470:11;30483:9;30452:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30452:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30452:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30452:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30452:41:4;;;;;;;;;;;;;;;;30439:54;;30540:9;30526:11;:23;30516:7;:33;30508:5;:41;30504:109;;;30573:1;30566:8:::0;::::1;;;;;;30504:109;30623:17;30643:14;30651:5;30643:7;;;:14;;:::i;:::-;30623:34;;30675:8;;;;;;;;;;;:28;;;30711:5;30718:1;30721:11;30734:4;30740:9;30675:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30675:75:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30675:75:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30675:75:4;;;;;;;;;;;;;;;;30668:82;;;;12444:1;30296:462:::0;;;;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;;;:55;;:::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;;;:55;;:::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;;;:55;;:::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;;;:55;;:::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;;;:55;;:::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;;;:55;;:::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;;;:55;;:::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;;;:55;;:::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;45804:375::-;45865:26;45904:19;:17;;;:19;;:::i;:::-;45934:24;;:::i;:::-;45969:22;45981:3;45986:4;45969:11;;;;;:22;;:::i;:::-;46002:16;:3;:14;;;;;:16;;:::i;:::-;46034:6;46043:1;46034:10;;46029:90;46050:4;:11;46046:1;:15;46029:90;;;46083:24;46099:4;46104:1;46099:7;;;;;;;;;;;;;;46083:3;:15;;;;;;:24;;;;:::i;:::-;46063:3;;;;;;;46029:90;;;;46129:17;:3;:15;;;;;:17;;:::i;:::-;46164:3;:7;;;46157:14;;;45804:375;;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;59301:179::-;59397:4;59391:11;59456:4;59447:7;59443:18;59431:10;59425:4;59416:46;59364:109;:::o;4419:446::-;4494:13;4510:9;4494:25;;4551:1;4545:2;4534:8;:13;;;;;;:18;4530:83;;4598:2;4587:8;:13;;;;;;4581:2;:20;4569:32;;;;4530:83;4639:8;4623:4;:13;;:24;;;;;4737:4;4731:11;4769:3;4763:4;4756:17;4799:1;4794:3;4787:14;4837:8;4832:3;4828:18;4822:4;4815:32;4705:153;;;;:::o;10795:130::-;10867:50;10894:4;8902:1;10867:26;;;:50;;:::i;:::-;10795:130;:::o;10400:181::-;10494:49;10505:4;8852:1;10529:6;:13;10494:10;;;:49;;:::i;:::-;10554:19;10566:6;10554:4;:11;;;;;;:19;;;;:::i;:::-;;10400:181;;:::o;11067:138::-;11140:57;11167:4;9067:1;11140:26;;;:57;;:::i;:::-;11067:138;:::o;9823:147::-;9924:38;9958:2;9953:1;9943:6;:11;;;;9942:18;9924:4;:11;;;;;;:38;;;;:::i;:::-;9823:147;;:::o;9077:738::-;9189:2;9179:6;:12;9175:633;;9208:42;9242:6;9237:1;9227:6;:11;;;;9226:22;;;9208:4;:11;;;;;;:42;;;;:::i;:::-;9175:633;;;9282:4;9272:6;:14;9268:540;;9303:38;9337:2;9332:1;9322:6;:11;;;;9321:18;9303:4;:11;;;;;;:38;;;;:::i;:::-;9356:25;9371:6;9379:1;9356:4;:14;;;;;;:25;;;;;:::i;:::-;;9268:540;;;9413:6;9403;:16;9399:409;;9436:38;9470:2;9465:1;9455:6;:11;;;;9454:18;9436:4;:11;;;;;;:38;;;;:::i;:::-;9489:25;9504:6;9512:1;9489:4;:14;;;;;;:25;;;;;:::i;:::-;;9399:409;;;9546:10;9536:6;:20;9532:276;;9573:38;9607:2;9602:1;9592:6;:11;;;;9591:18;9573:4;:11;;;;;;:38;;;;:::i;:::-;9626:25;9641:6;9649:1;9626:4;:14;;;;;;:25;;;;;:::i;:::-;;9532:276;;;9683:18;9673:6;:28;9669:139;;9718:38;9752:2;9747:1;9737:6;:11;;;;9736:18;9718:4;:11;;;;;;:38;;;;:::i;:::-;9771:25;9786:6;9794:1;9771:4;:14;;;;;;:25;;;;;:::i;:::-;;9669:139;9532:276;9399:409;9268:540;9175:633;9077:738;;;:::o;5513:1241::-;5592:21;;:::i;:::-;5663:4;:13;;;5645:4;:8;;;:15;5630:5;:12;:30;:46;5626:129;;;5693:50;5700:4;5741:1;5706:32;5710:4;:13;;;5725:5;:12;5706:3;;;:32;;:::i;:::-;:36;5693:6;;;:50;;:::i;:::-;5626:129;5765:9;5785:8;5804;5815:5;:12;5804:23;;5882:4;5876:11;5958:6;5952:13;6046:2;6037:6;6029;6025:19;6021:28;6013:36;;6170:5;6164:12;6156:6;6152:25;6144:6;6137:41;6234:2;6227:5;6223:14;6216:21;;5847:401;;6258:212;6271:2;6264:3;:9;6258:212;;6390:3;6384:10;6378:4;6371:24;6432:2;6424:10;;;;6456:2;6449:9;;;;6282:2;6275:9;;;;6258:212;;;6480:9;6512:1;6505:3;6500:2;:8;6492:3;:17;:21;6480:33;;6607:4;6603:9;6597:3;6591:10;6587:26;6660:4;6653;6647:11;6643:22;6705:7;6695:8;6692:21;6686:4;6679:35;6557:168;;6742:4;6735:11;;;;;;5513:1241;;;;:::o;7010:586::-;7110:4;:13;;;7106:1;7088:4;:8;;;:15;:19;:35;7084:99;;;7140:31;7147:4;7169:1;7153:4;:13;;;:17;7140:6;;;:31;;:::i;:::-;7084:99;7237:4;7231:11;7313:6;7307:13;7405:2;7396:6;7388;7384:19;7380:28;7504:5;7498:4;7490:20;7551:1;7543:6;7539:14;7531:6;7524:30;7202:387;;;;;:::o;7898:748::-;7983:21;;:::i;:::-;8046:4;:13;;;8028:4;:8;;;:15;8021:4;:22;:38;8017:113;;;8076:42;8083:4;8116:1;8089:24;8093:4;:13;;;8108:4;8089:3;;;:24;;:::i;:::-;:28;8076:6;;;:42;;:::i;:::-;8017:113;8140:9;8166:1;8159:4;8152:3;:11;:15;8140:27;;8222:4;8216:11;8298:6;8292:13;8390:4;8381:6;8373;8369:19;8365:30;8528:5;8520:4;8516:9;8509:4;8503:11;8499:27;8496:38;8490:4;8483:52;8576:4;8568:6;8564:17;8556:6;8549:33;8187:430;;;8634:4;8627:11;;;7898:748;;;;;:::o;5058:151::-;5111:9;5142:2;5137;:7;5133:49;;;5168:2;5161:9;;;;5133:49;5199:2;5192:9;;5058:151;;;;;:::o;4873:177::-;4949:19;4971:4;:8;;;4949:30;;4990:21;4995:4;5001:9;4990:4;;;:21;;:::i;:::-;5022:20;5029:4;5035:6;5022;;;:20;;:::i;:::-;;4873:177;;;:::o;1135:1537:0:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1135:1537:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;350:410;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:410:0;;;:::i;:::-;;15744:132:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15744:132:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15744:132:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15744:132:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15744:132:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15744:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15744:132:4;;;;;;;;;;;;;;;:::i;:::-;;455:387:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:387:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;455:387:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;455:387:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;455:387:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;455:387:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;455:387:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;455:387:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;455:387:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;455:387:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;455:387:3;;;;;;;;;;;;;;;:::i;:::-;;2291:373:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2291:373:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;49:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;850:445:3;;;:::i;:::-;;1588:691:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1339:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;151:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;151:27:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1303:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:266:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;350:410:0;387:15;405:12;:10;:12::i;:::-;387:30;;422:20;;:::i;:::-;451:7;:19;459:10;451:19;;;;;;;;;;;;;;;:26;;;;;;;;;;;;447:310;;499:13;:11;:13::i;:::-;487:6;:9;;:25;;;;;537:4;521:6;:13;;:20;;;;;;;;;;;567:7;550:6;:14;;:24;;;;;583:20;596:6;583:12;:20::i;:::-;612:15;633:10;612:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;612:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:310;;;674:7;:19;682:10;674:19;;;;;;;;;;;;;;;665:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:7;700:6;:14;;:24;;;;;731:20;744:6;731:12;:20::i;:::-;447:310;350:410;;:::o;15744:132:4:-;15828:40;15839:5;15846:7;15865:1;15855:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15855:12:4;;;;15828:10;:40::i;:::-;15744:132;;:::o;455:387:3:-;601:20;:18;:20::i;:::-;587:34;;:10;:34;;;579:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:20;744:1;731:7;714:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;714:25:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;714:25:3;;;704:36;;;;;;696:45;;:49;;;;;;673:72;;771:12;756;:27;;;;799:35;821:12;799:35;;;;;;;;;;;;;;;;;;455:387;;;;:::o;2291:373:0:-;2370:4;2349:10;1553:4;1540:9;:17;;1532:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2382:12:::1;2397:5:::0;2382:20:::1;;2429:1;2424;2412:9;:13;;;;;;:18;2409:173;;;2456:4;2446:14;;2480:9;2469:7;;:20;;;;;;;;;;;2498:10;:19;;:34;2530:1;2518:9;:13;2498:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2498:34:0;2409:173;;;2565:9;2554:7;;:20;;;;;;;;;;;2409:173;2595:41;2605:10;2617:9;2628:7;2595:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:7;2644:14;;;2291:373:::0;;;;:::o;49:20:2:-;;;;;;;;;;;;;:::o;850:445:3:-;917:29;949:1;917:33;;961:24;988:6;961:33;;1034:15;1052:144;1092:21;143:1;1169:16;1052:25;:144::i;:::-;1034:162;;1212:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:445;;;:::o;1588:691:0:-;1650:4;1630:10;1553:4;1540:9;:17;;1532:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:9:::1;1670:21;:34;;1662:64;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1737:11;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;1737:26:0;;;;;;;;;;;;;;1733:541;;;20:4:-1;14:11;6:19;;43:1;37:4;30:15;57:1;50:730;;;93:4;75:16;72:26;69:2;;;109:1;101:9;;111:5;;69:2;145:1;142;139::::0;124:23:::1;179:1;173:8;168:3;164:18;206:10;201:3;198:19;188:2;;229:1;221:9;;231:5;;;188:2;290:1;272:16;268:24;265:1;259:4;244:49;319:4;313:11;403:16;396:4;388:6;384:17;381:39;354:18;346:6;343:30;333:94;330:2;;;444:1;436:9;;452:5;;;;330:2;491:6;485:4;481:17;524:3;518:10;548:18;540:6;537:30;534:2;;;578:1;570:9;;580:5;;;;;;534:2;624:6;617:4;612:3;608:14;604:27;658:16;652:4;648:27;643:3;640:36;637:2;;;687:1;679:9;;689:5;;;;;;;637:2;739:4;735:9;728:4;723:3;719:14;715:30;709:4;702:44;760:3;752:11;;769:5;;;;;50:730;1733:541:0;;;;;;;1969:13;1975:6;1969:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1969:13:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:5;1993:12;;;;;1733:541;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;2216:27:0;2230:12;2216:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2216:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:5;2254:12;;;;;1733:541;1779:4;1772:11;;1575:1;1588:691:::0;;:::o;1339:19::-;;;;:::o;151:27:3:-;;;;:::o;1303:266::-;1341:7;1442:15;1468:17;;;;;;;;;;;;;;;;;;;1442:44;;1497:39;1508:7;1497:39;;;;;;;;;;;;;;;;;1522:13;;;;;;;;;;;;;;;;;1497:10;:39::i;:::-;1554:7;1547:14;;;1303:266;:::o;766:76:0:-;806:4;826:8;;:10;;;;;;;;;;;;819:17;;766:76;:::o;849:135::-;912:15;930:10;912:28;;970:6;951:7;:16;959:7;951:16;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;849:135;;:::o;993:::-;1056:15;1074:10;1056:28;;1114:6;1095:7;:16;1103:7;1095:16;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:135;;:::o;38114:132:4:-;38174:24;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38218:8:::1;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;38218:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38218:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;38218:20:4;;;;;;;;;;;;;;;;38211:27;;38114:132:::0;:::o;46187:2689::-;46289:16;46337:1;46327:7;:11;46326:32;;;;;46355:2;46344:7;:13;;46326:32;46318:41;;;;;;46380:2;46370:12;;;;46439:19;46471:1;46461:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46461:12:4;;;;46439:34;;46507:7;46496:20;;46484:6;46491:1;46484:9;;;;;;;;;;;:32;;;;;;;;;;;46527:19;46559:2;46549:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46549:13:4;;;;46527:35;;46573:27;46613:2;46603:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46603:13:4;;;;46573:43;;46627:30;46660:40;:38;:40::i;:::-;46627:73;;46750:4;46742:6;46735:20;47107:11;47095:10;47091:28;47086:1;47076:8;47072:16;47062:27;47058:62;47051:4;47043:6;47039:17;47032:89;47158:4;47142:14;47135:28;47211:22;47204:4;47188:14;47184:25;47177:57;47255:18;47286:2;47276:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47276:13:4;;;;47255:34;;47349:6;47342:4;47335:5;47331:16;47324:32;47377:25;47415:1;47405:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47405:12:4;;;;47377:40;;47428;47438:5;47445:2;47449:1;47452:12;47466:1;47428:9;:40::i;:::-;;47479:20;;:::i;:::-;:62;;;;;;;;47503:6;47479:62;;;;47511:6;47479:62;;;;47519:14;47479:62;;;;47535:5;47479:62;;;;;47552:15;47570:47;;;;;;;;;;;;;;;;;;47595:4;47601:15;47570:14;:47::i;:::-;47552:65;;47628:30;47671:1;47661:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47661:12:4;;;;47628:45;;47741:4;47727:12;47723:23;47717:30;47806:65;47803:1;47799:73;47792:4;47773:17;47769:28;47761:112;47932:63;47929:1;47925:71;47918:4;47899:17;47895:28;47887:110;48056:61;48053:1;48049:69;48042:4;48023:17;48019:28;48011:108;48178:59;48175:1;48171:67;48164:4;48145:17;48141:28;48133:106;48298:57;48295:1;48291:65;48284:4;48265:17;48261:28;48253:104;48416:55;48413:1;48409:63;48402:4;48383:17;48379:28;48371:102;48532:53;48529:1;48525:61;48518:4;48499:17;48495:28;48487:100;48646:51;48643:1;48639:59;48632:4;48613:17;48609:28;48601:98;47693:1017;48720:123;48752:7;48788:17;48807:4;48812:1;48807:7;;;;;;;;;;;48816:15;48823:4;48828:1;48823:7;;;;;;;;;;;48816:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48816:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48816:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48816:15:4;;;;;;;;;;;;;;;;48833:4;48838:1;48833:7;;;;;;;;;;;48771:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48771:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48771:70:4;;;48761:81;;;;;;48720:31;:123::i;:::-;48861:7;48854:14;;;;;;;;;;;46187:2689;;;;;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;:21::i;:::-;13110:28;;12938:208;;;:::o;38557:171::-;38637:23;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38680:8:::1;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;38680:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;38680:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;38680:40:4;;;;;;;;;;;;;;;;38673:47;;38557:171:::0;:::o;55647:707::-;55775:25;55813:14;55840:9;55830:7;:19;55813:36;;55882:9;55868:3;:10;:23;;55860:32;;;;;;55948:6;55962:11;55957:2;:16;55948:25;;56065:6;56079:9;56074:2;:14;56065:23;;56099:227;56130:7;56116:11;56111:2;:16;:26;56106:1;:32;56099:227;;;56211:1;56204:5;56200:13;56194:20;56252:3;56248:1;56243:3;56239:11;56232:24;56164:107;56290:2;56285:7;;;;56312:2;56307:7;;;;56099:227;;;56343:3;56336:10;;;;;55647:707;;;;;;;:::o;35894:384::-;36014:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;36038:22:::1;36075:1;36063:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36038:39;;36101:5;36107:1;36101:8;;;;;;;;;;;36088:7;36096:1;36088:10;;;;;;;;;;;;;:21;;;;36133:5;36139:1;36133:8;;;;;;;;;;;36120:7;36128:1;36120:10;;;;;;;;;;;;;:21;;;;36165:5;36171:1;36165:8;;;;;;;;;;;36152:7;36160:1;36152:10;;;;;;;;;;;;;:21;;;;36197:5;36203:1;36197:8;;;;;;;;;;;36184:7;36192:1;36184:10;;;;;;;;;;;;;:21;;;;36223:47;36238:11;36251:7;36260:9;36223:14;:47::i;:::-;36216:54;;;35894:384:::0;;;;;:::o;48884:154::-;49019:11;48984:22;:32;49007:8;48984:32;;;;;;;;;;;:46;;;;48884:154;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;:55::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;:55::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;:55::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;:55::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;:55::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;:55::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;:55::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;:55::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;30296:462::-;30415:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12351:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12351:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12351:16:4;;;;;;;;;;;;;;;;12330:37;;12338:8;;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12405:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12405:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12405:16:4;;;;;;;;;;;;;;;;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;30439:10:::1;30452:8;;;;;;;;;;;:17;;;30470:11;30483:9;30452:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30452:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30452:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30452:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30452:41:4;;;;;;;;;;;;;;;;30439:54;;30540:9;30526:11;:23;30516:7;:33;30508:5;:41;30504:109;;;30573:1;30566:8:::0;::::1;;;;;;30504:109;30623:17;30643:14;30651:5;30643:7;:14::i;:::-;30623:34;;30675:8;;;;;;;;;;;:28;;;30711:5;30718:1;30721:11;30734:4;30740:9;30675:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30675:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30675:75:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30675:75:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30675:75:4;;;;;;;;;;;;;;;;30668:82;;;;12444:1;30296:462:::0;;;;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;45804:375::-;45865:26;45904:19;:17;:19::i;:::-;45934:24;;:::i;:::-;45969:22;45981:3;45986:4;45969:11;:22::i;:::-;46002:16;:3;:14;:16::i;:::-;46034:6;46043:1;46034:10;;46029:90;46050:4;:11;46046:1;:15;46029:90;;;46083:24;46099:4;46104:1;46099:7;;;;;;;;;;;;;;46083:3;:15;;:24;;;;:::i;:::-;46063:3;;;;;;;46029:90;;;;46129:17;:3;:15;:17::i;:::-;46164:3;:7;;;46157:14;;;45804:375;;;:::o;59301:179::-;59397:4;59391:11;59456:4;59447:7;59443:18;59431:10;59425:4;59416:46;59364:109;:::o;4419:446::-;4494:13;4510:9;4494:25;;4551:1;4545:2;4534:8;:13;;;;;;:18;4530:83;;4598:2;4587:8;:13;;;;;;4581:2;:20;4569:32;;;;4530:83;4639:8;4623:4;:13;;:24;;;;;4737:4;4731:11;4769:3;4763:4;4756:17;4799:1;4794:3;4787:14;4837:8;4832:3;4828:18;4822:4;4815:32;4705:153;;;;:::o;10795:130::-;10867:50;10894:4;8902:1;10867:26;:50::i;:::-;10795:130;:::o;10400:181::-;10494:49;10505:4;8852:1;10529:6;:13;10494:10;:49::i;:::-;10554:19;10566:6;10554:4;:11;;:19;;;;:::i;:::-;;10400:181;;:::o;11067:138::-;11140:57;11167:4;9067:1;11140:26;:57::i;:::-;11067:138;:::o;9823:147::-;9924:38;9958:2;9953:1;9943:6;:11;;;;9942:18;9924:4;:11;;:38;;;;:::i;:::-;9823:147;;:::o;9077:738::-;9189:2;9179:6;:12;9175:633;;9208:42;9242:6;9237:1;9227:6;:11;;;;9226:22;;;9208:4;:11;;:42;;;;:::i;:::-;9175:633;;;9282:4;9272:6;:14;9268:540;;9303:38;9337:2;9332:1;9322:6;:11;;;;9321:18;9303:4;:11;;:38;;;;:::i;:::-;9356:25;9371:6;9379:1;9356:4;:14;;:25;;;;;:::i;:::-;;9268:540;;;9413:6;9403;:16;9399:409;;9436:38;9470:2;9465:1;9455:6;:11;;;;9454:18;9436:4;:11;;:38;;;;:::i;:::-;9489:25;9504:6;9512:1;9489:4;:14;;:25;;;;;:::i;:::-;;9399:409;;;9546:10;9536:6;:20;9532:276;;9573:38;9607:2;9602:1;9592:6;:11;;;;9591:18;9573:4;:11;;:38;;;;:::i;:::-;9626:25;9641:6;9649:1;9626:4;:14;;:25;;;;;:::i;:::-;;9532:276;;;9683:18;9673:6;:28;9669:139;;9718:38;9752:2;9747:1;9737:6;:11;;;;9736:18;9718:4;:11;;:38;;;;:::i;:::-;9771:25;9786:6;9794:1;9771:4;:14;;:25;;;;;:::i;:::-;;9669:139;9532:276;9399:409;9268:540;9175:633;9077:738;;;:::o;5513:1241::-;5592:21;;:::i;:::-;5663:4;:13;;;5645:4;:8;;;:15;5630:5;:12;:30;:46;5626:129;;;5693:50;5700:4;5741:1;5706:32;5710:4;:13;;;5725:5;:12;5706:3;:32::i;:::-;:36;5693:6;:50::i;:::-;5626:129;5765:9;5785:8;5804;5815:5;:12;5804:23;;5882:4;5876:11;5958:6;5952:13;6046:2;6037:6;6029;6025:19;6021:28;6013:36;;6170:5;6164:12;6156:6;6152:25;6144:6;6137:41;6234:2;6227:5;6223:14;6216:21;;5847:401;;6258:212;6271:2;6264:3;:9;6258:212;;6390:3;6384:10;6378:4;6371:24;6432:2;6424:10;;;;6456:2;6449:9;;;;6282:2;6275:9;;;;6258:212;;;6480:9;6512:1;6505:3;6500:2;:8;6492:3;:17;:21;6480:33;;6607:4;6603:9;6597:3;6591:10;6587:26;6660:4;6653;6647:11;6643:22;6705:7;6695:8;6692:21;6686:4;6679:35;6557:168;;6742:4;6735:11;;;;;;5513:1241;;;;:::o;7010:586::-;7110:4;:13;;;7106:1;7088:4;:8;;;:15;:19;:35;7084:99;;;7140:31;7147:4;7169:1;7153:4;:13;;;:17;7140:6;:31::i;:::-;7084:99;7237:4;7231:11;7313:6;7307:13;7405:2;7396:6;7388;7384:19;7380:28;7504:5;7498:4;7490:20;7551:1;7543:6;7539:14;7531:6;7524:30;7202:387;;;;;:::o;7898:748::-;7983:21;;:::i;:::-;8046:4;:13;;;8028:4;:8;;;:15;8021:4;:22;:38;8017:113;;;8076:42;8083:4;8116:1;8089:24;8093:4;:13;;;8108:4;8089:3;:24::i;:::-;:28;8076:6;:42::i;:::-;8017:113;8140:9;8166:1;8159:4;8152:3;:11;:15;8140:27;;8222:4;8216:11;8298:6;8292:13;8390:4;8381:6;8373;8369:19;8365:30;8528:5;8520:4;8516:9;8509:4;8503:11;8499:27;8496:38;8490:4;8483:52;8576:4;8568:6;8564:17;8556:6;8549:33;8187:430;;;8634:4;8627:11;;;7898:748;;;;;:::o;5058:151::-;5111:9;5142:2;5137;:7;5133:49;;;5168:2;5161:9;;;;5133:49;5199:2;5192:9;;5058:151;;;;;:::o;4873:177::-;4949:19;4971:4;:8;;;4949:30;;4990:21;4995:4;5001:9;4990:4;:21::i;:::-;5022:20;5029:4;5035:6;5022;:20::i;:::-;;4873:177;;;:::o;1135:1537:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.6.2;\r\nimport \"./Ownable.sol\";\r\nimport \"./Random.sol\";\r\n\r\n// 1. Make multiple users play game\r\n\r\ncontract PlayerContr is Random{\r\n\r\n  struct Player {\r\n  uint id;\r\n  bytes32 queryId;\r\n  uint balance;\r\n  bool exists;\r\n}\r\n\r\nuint private playerId;\r\n\r\n\r\nmapping (address => Player) private players;\r\naddress[] private playerAddresses;\r\n\r\nfunction getRandomNum() public\r\n{\r\n  bytes32 queryId = testRandom();\r\n  Player memory player;\r\n  if(!players[msg.sender].exists){\r\n      player.id = getPlayerId();\r\n      player.exists = true;\r\n      player.queryId = queryId;\r\n      insertPlayer(player);\r\n      playerAddresses.push(msg.sender);\r\n  }else\r\n  {\r\n    player = players[msg.sender];\r\n    player.queryId = queryId;\r\n    updatePlayer(player);\r\n  }\r\n}\r\n\r\n  function getPlayerId() private returns (uint) {\r\n    return playerId++;\r\n  }\r\n\r\n   function insertPlayer(Player memory player) private {\r\n        address creator = msg.sender;\r\n        players[creator] = player;\r\n    }\r\n\r\n     function updatePlayer(Player memory player) private {\r\n        address creator = msg.sender;\r\n        players[creator] = player;\r\n    }\r\n}\r\n\r\ncontract CoinFlip is Ownable, PlayerContr{\r\n PlayerContr playerContr;\r\n event placedBet(address user, uint bet, bool success);\r\n event error(string reason);\r\n event lowLevelError(bytes lowLevelData);\r\n\r\n uint public balance;\r\n\r\n  constructor(uint initialSupply) public payable{\r\n     balance = initialSupply;\r\n        playerContr = new PlayerContr();\r\n    }\r\n\r\n  modifier costs(uint cost){\r\n      require(msg.value >= cost,\"Error\");\r\n      _;\r\n  }\r\n\r\n  function getRandom() public payable costs(0.05 ether) returns(bool){\r\n    require(address(this).balance >= msg.value, \"Not enough funds!\");\r\n    try playerContr.getRandomNum(){\r\n      return true;\r\n    }catch Error(string memory reason) {\r\n        // This is executed in case\r\n        // revert was called inside getData\r\n        // and a reason string was provided.\r\n        emit error(reason);\r\n        return false;\r\n    } catch (bytes memory lowLevelData) {\r\n        // This is executed in case revert() was used\r\n        // or there was a failing assertion, division\r\n        // by zero, etc. inside getData.\r\n        emit lowLevelError(lowLevelData);\r\n        return false;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  function flipCoin(uint256 randomNum) public payable costs(0.05 ether)  returns(bool){\r\n    bool success = false;\r\n    if(randomNum % 2 == 1)\r\n    {\r\n      success = true;\r\n      balance -= msg.value;\r\n      msg.sender.transfer(msg.value * 2);\r\n    }else {\r\n      balance += msg.value;\r\n    }\r\n\r\n    emit placedBet(msg.sender, msg.value, success);\r\n\r\n   return success;\r\n  }\r\n\r\n \r\n}\r\n",
  "sourcePath": "C:/Users/Slaven/source/repos/flip-coin/contracts/CoinFlip.sol",
  "ast": {
    "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        299
      ],
      "PlayerContr": [
        135
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 362,
        "src": "24:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol",
        "file": "./Random.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 481,
        "src": "49:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 480,
              "src": "138:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$480",
                "typeString": "contract Random"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "138:6:0"
          }
        ],
        "contractDependencies": [
          480,
          6891
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          480,
          6891
        ],
        "name": "PlayerContr",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PlayerContr.Player",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "170:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "170:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "queryId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "182:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 8,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "182:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "202:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "219:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "219:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nodeType": "StructDefinition",
            "scope": 135,
            "src": "151:83:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "playerId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 135,
            "src": "238:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "238:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 135,
            "src": "266:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
              "typeString": "mapping(address => struct PlayerContr.Player)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "266:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                "typeString": "mapping(address => struct PlayerContr.Player)"
              },
              "valueType": {
                "contractScope": null,
                "id": 18,
                "name": "Player",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 14,
                "src": "286:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                  "typeString": "struct PlayerContr.Player"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "name": "playerAddresses",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 135,
            "src": "312:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "312:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 22,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "312:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "382:378:0",
              "statements": [
                {
                  "assignments": [
                    27
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 90,
                      "src": "387:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 26,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28,
                      "name": "testRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "405:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "405:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "387:30:0"
                },
                {
                  "assignments": [
                    32
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32,
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 90,
                      "src": "422:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                        "typeString": "struct PlayerContr.Player"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 31,
                        "name": "Player",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 14,
                        "src": "422:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                          "typeString": "struct PlayerContr.Player"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "422:20:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "450:27:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "451:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                            "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                          }
                        },
                        "id": 37,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "459:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "459:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "451:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$14_storage",
                          "typeString": "struct PlayerContr.Player storage ref"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "451:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "658:99:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "665:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                              "typeString": "struct PlayerContr.Player memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "674:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                                "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                              }
                            },
                            "id": 75,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 73,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "682:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "682:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "674:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$14_storage",
                              "typeString": "struct PlayerContr.Player storage ref"
                            }
                          },
                          "src": "665:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                            "typeString": "struct PlayerContr.Player memory"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "665:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "700:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "queryId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "700:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "717:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "700:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "700:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "744:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            ],
                            "id": 84,
                            "name": "updatePlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "731:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Player_$14_memory_ptr_$returns$__$",
                              "typeString": "function (struct PlayerContr.Player memory)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "731:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "731:20:0"
                      }
                    ]
                  },
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "447:310:0",
                  "trueBody": {
                    "id": 70,
                    "nodeType": "Block",
                    "src": "478:172:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 40,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "487:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 42,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "487:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43,
                              "name": "getPlayerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "499:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () returns (uint256)"
                              }
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "499:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "487:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 46,
                        "nodeType": "ExpressionStatement",
                        "src": "487:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 47,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "521:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "521:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "537:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "521:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "521:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 53,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "550:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "queryId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "550:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 56,
                            "name": "queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "567:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "550:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "550:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 60,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "596:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            ],
                            "id": 59,
                            "name": "insertPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "583:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Player_$14_memory_ptr_$returns$__$",
                              "typeString": "function (struct PlayerContr.Player memory)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "583:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "583:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 66,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "633:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "633:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "playerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "612:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "612:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "612:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "612:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "25b814f4",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNum",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:0"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:0"
            },
            "scope": 135,
            "src": "350:410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "812:30:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "826:10:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "playerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "826:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "819:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:2:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "806:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:6:0"
            },
            "scope": 135,
            "src": "766:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "901:83:0",
              "statements": [
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "name": "creator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 116,
                      "src": "912:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "912:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "930:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "930:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "912:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "951:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                          "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 111,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "959:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "951:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_storage",
                        "typeString": "struct PlayerContr.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "970:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                        "typeString": "struct PlayerContr.Player memory"
                      }
                    },
                    "src": "951:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage",
                      "typeString": "struct PlayerContr.Player storage ref"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "951:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insertPlayer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "871:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                    "typeString": "struct PlayerContr.Player"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 101,
                    "name": "Player",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14,
                    "src": "871:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                      "typeString": "struct PlayerContr.Player"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "870:22:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:0"
            },
            "scope": 135,
            "src": "849:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1045:83:0",
              "statements": [
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "creator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 133,
                      "src": "1056:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1056:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1074:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1074:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1056:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1095:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                          "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                        }
                      },
                      "id": 129,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1103:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1095:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_storage",
                        "typeString": "struct PlayerContr.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1114:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                        "typeString": "struct PlayerContr.Player memory"
                      }
                    },
                    "src": "1095:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage",
                      "typeString": "struct PlayerContr.Player storage ref"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePlayer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "1015:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                    "typeString": "struct PlayerContr.Player"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 118,
                    "name": "Player",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14,
                    "src": "1015:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                      "typeString": "struct PlayerContr.Player"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:22:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:0:0"
            },
            "scope": 135,
            "src": "993:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 300,
        "src": "114:1017:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 136,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 361,
              "src": "1156:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$361",
                "typeString": "contract Ownable"
              }
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "1156:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 138,
              "name": "PlayerContr",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "1165:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PlayerContr_$135",
                "typeString": "contract PlayerContr"
              }
            },
            "id": 139,
            "nodeType": "InheritanceSpecifier",
            "src": "1165:11:0"
          }
        ],
        "contractDependencies": [
          135,
          361,
          480,
          6891
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          135,
          480,
          6891,
          361
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 141,
            "name": "playerContr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1180:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PlayerContr_$135",
              "typeString": "contract PlayerContr"
            },
            "typeName": {
              "contractScope": null,
              "id": 140,
              "name": "PlayerContr",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "1180:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PlayerContr_$135",
                "typeString": "contract PlayerContr"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 149,
            "name": "placedBet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1223:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "indexed": false,
                  "name": "bet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1237:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1247:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1222:38:0"
            },
            "src": "1207:54:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 153,
            "name": "error",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "1276:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1275:15:0"
            },
            "src": "1264:27:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 157,
            "name": "lowLevelError",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "name": "lowLevelData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 157,
                  "src": "1314:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1313:20:0"
            },
            "src": "1294:40:0"
          },
          {
            "constant": false,
            "functionSelector": "b69ef8a8",
            "id": 159,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1339:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1339:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "1411:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1419:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "1429:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1419:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "playerContr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1453:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PlayerContr_$135",
                        "typeString": "contract PlayerContr"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1467:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PlayerContr_$135_$",
                          "typeString": "function () returns (contract PlayerContr)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 169,
                          "name": "PlayerContr",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 135,
                          "src": "1471:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PlayerContr_$135",
                            "typeString": "contract PlayerContr"
                          }
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PlayerContr_$135",
                        "typeString": "contract PlayerContr"
                      }
                    },
                    "src": "1453:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PlayerContr_$135",
                      "typeString": "contract PlayerContr"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 175,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 175,
                  "src": "1377:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:20:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:0"
            },
            "scope": 299,
            "src": "1365:127:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1523:59:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1540:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1540:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 177,
                          "src": "1553:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1540:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1532:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:34:0"
                },
                {
                  "id": 187,
                  "nodeType": "PlaceholderStatement",
                  "src": "1575:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "name": "costs",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1513:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1512:11:0"
            },
            "src": "1498:84:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1655:624:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 200,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1678:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$299",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$299",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1670:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 198,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1670:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1670:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1670:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1695:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1695:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1670:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e647321",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1706:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd",
                          "typeString": "literal_string \"Not enough funds!\""
                        },
                        "value": "Not enough funds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd",
                          "typeString": "literal_string \"Not enough funds!\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1662:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:64:0"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 214,
                        "nodeType": "Block",
                        "src": "1763:28:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1779:4:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 196,
                            "id": 213,
                            "nodeType": "Return",
                            "src": "1772:11:0"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 215,
                      "nodeType": "TryCatchClause",
                      "parameters": null,
                      "src": "1763:28:0"
                    },
                    {
                      "block": {
                        "id": 225,
                        "nodeType": "Block",
                        "src": "1825:188:0",
                        "statements": [
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 220,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 217,
                                  "src": "1975:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 219,
                                "name": "error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1969:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1969:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 222,
                            "nodeType": "EmitStatement",
                            "src": "1964:18:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2000:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 196,
                            "id": 224,
                            "nodeType": "Return",
                            "src": "1993:12:0"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 226,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 218,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 217,
                            "name": "reason",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 226,
                            "src": "1803:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1803:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "src": "1802:22:0"
                      },
                      "src": "1791:222:0"
                    },
                    {
                      "block": {
                        "id": 236,
                        "nodeType": "Block",
                        "src": "2048:226:0",
                        "statements": [
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 231,
                                  "name": "lowLevelData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "2230:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 230,
                                "name": "lowLevelError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "2216:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory)"
                                }
                              },
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2216:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 233,
                            "nodeType": "EmitStatement",
                            "src": "2211:32:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2261:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 196,
                            "id": 235,
                            "nodeType": "Return",
                            "src": "2254:12:0"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 237,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 229,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 228,
                            "name": "lowLevelData",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 237,
                            "src": "2021:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 227,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2021:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "src": "2020:27:0"
                      },
                      "src": "2014:260:0"
                    }
                  ],
                  "externalCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 209,
                        "name": "playerContr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1737:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PlayerContr_$135",
                          "typeString": "contract PlayerContr"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRandomNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "1737:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1737:26:0",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "TryStatement",
                  "src": "1733:541:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aacc5a17",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "302e3035",
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1630:10:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                      "typeString": "int_const 50000000000000000"
                    },
                    "value": "0.05"
                  }
                ],
                "id": 193,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 189,
                  "src": "1624:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1624:17:0"
              }
            ],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:2:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "1650:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1649:6:0"
            },
            "scope": 299,
            "src": "1588:691:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "2375:289:0",
              "statements": [
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 297,
                      "src": "2382:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 250,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2382:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2397:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2382:20:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "randomNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2412:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2424:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2412:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2429:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2412:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "2545:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 280,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2554:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 281,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2565:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2565:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2554:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 284,
                        "nodeType": "ExpressionStatement",
                        "src": "2554:20:0"
                      }
                    ]
                  },
                  "id": 286,
                  "nodeType": "IfStatement",
                  "src": "2409:173:0",
                  "trueBody": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "2437:103:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 259,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "2446:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2456:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2446:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 262,
                        "nodeType": "ExpressionStatement",
                        "src": "2446:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 263,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2469:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 264,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2480:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2480:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2469:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "2469:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 273,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2518:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2518:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2530:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "2518:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2498:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2498:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2498:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2498:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "2498:34:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2605:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2605:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2617:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2617:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "2628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 287,
                      "name": "placedBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2595:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "EmitStatement",
                  "src": "2590:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "2651:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "2644:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5f5be1f4",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "302e3035",
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2349:10:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                      "typeString": "int_const 50000000000000000"
                    },
                    "value": "0.05"
                  }
                ],
                "id": 246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 244,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 189,
                  "src": "2343:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2343:17:0"
              }
            ],
            "name": "flipCoin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "randomNum",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "2309:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2308:19:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "2370:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2369:6:0"
            },
            "scope": 299,
            "src": "2291:373:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 300,
        "src": "1135:1537:0"
      }
    ],
    "src": "0:2674:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        299
      ],
      "PlayerContr": [
        135
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 362,
        "src": "24:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Slaven/source/repos/flip-coin/contracts/Random.sol",
        "file": "./Random.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 481,
        "src": "49:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 480,
              "src": "138:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$480",
                "typeString": "contract Random"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "138:6:0"
          }
        ],
        "contractDependencies": [
          480,
          6891
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          480,
          6891
        ],
        "name": "PlayerContr",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PlayerContr.Player",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "170:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "170:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "queryId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "182:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 8,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "182:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "202:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 14,
                "src": "219:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "219:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nodeType": "StructDefinition",
            "scope": 135,
            "src": "151:83:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "playerId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 135,
            "src": "238:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "238:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 135,
            "src": "266:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
              "typeString": "mapping(address => struct PlayerContr.Player)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "266:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                "typeString": "mapping(address => struct PlayerContr.Player)"
              },
              "valueType": {
                "contractScope": null,
                "id": 18,
                "name": "Player",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 14,
                "src": "286:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                  "typeString": "struct PlayerContr.Player"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "name": "playerAddresses",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 135,
            "src": "312:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "312:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 22,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "312:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "382:378:0",
              "statements": [
                {
                  "assignments": [
                    27
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 90,
                      "src": "387:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 26,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28,
                      "name": "testRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "405:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "405:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "387:30:0"
                },
                {
                  "assignments": [
                    32
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32,
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 90,
                      "src": "422:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                        "typeString": "struct PlayerContr.Player"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 31,
                        "name": "Player",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 14,
                        "src": "422:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                          "typeString": "struct PlayerContr.Player"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "422:20:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "450:27:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "451:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                            "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                          }
                        },
                        "id": 37,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "459:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "459:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "451:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$14_storage",
                          "typeString": "struct PlayerContr.Player storage ref"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "451:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "658:99:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "665:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                              "typeString": "struct PlayerContr.Player memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "674:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                                "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                              }
                            },
                            "id": 75,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 73,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "682:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "682:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "674:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$14_storage",
                              "typeString": "struct PlayerContr.Player storage ref"
                            }
                          },
                          "src": "665:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                            "typeString": "struct PlayerContr.Player memory"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "665:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "700:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "queryId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "700:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "717:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "700:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "700:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "744:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            ],
                            "id": 84,
                            "name": "updatePlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "731:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Player_$14_memory_ptr_$returns$__$",
                              "typeString": "function (struct PlayerContr.Player memory)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "731:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "731:20:0"
                      }
                    ]
                  },
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "447:310:0",
                  "trueBody": {
                    "id": 70,
                    "nodeType": "Block",
                    "src": "478:172:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 40,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "487:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 42,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "487:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43,
                              "name": "getPlayerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "499:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () returns (uint256)"
                              }
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "499:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "487:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 46,
                        "nodeType": "ExpressionStatement",
                        "src": "487:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 47,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "521:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "521:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "537:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "521:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "521:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 53,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "550:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "queryId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "550:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 56,
                            "name": "queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "567:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "550:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "550:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 60,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "596:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                                "typeString": "struct PlayerContr.Player memory"
                              }
                            ],
                            "id": 59,
                            "name": "insertPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "583:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Player_$14_memory_ptr_$returns$__$",
                              "typeString": "function (struct PlayerContr.Player memory)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "583:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "583:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 66,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "633:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "633:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "playerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "612:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "612:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "612:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "612:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "25b814f4",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNum",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:0"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:0"
            },
            "scope": 135,
            "src": "350:410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "812:30:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "826:10:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "playerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "826:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "819:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:2:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "806:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:6:0"
            },
            "scope": 135,
            "src": "766:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "901:83:0",
              "statements": [
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "name": "creator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 116,
                      "src": "912:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "912:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "930:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "930:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "912:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "951:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                          "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 111,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "959:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "951:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_storage",
                        "typeString": "struct PlayerContr.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "970:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                        "typeString": "struct PlayerContr.Player memory"
                      }
                    },
                    "src": "951:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage",
                      "typeString": "struct PlayerContr.Player storage ref"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "951:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insertPlayer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "871:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                    "typeString": "struct PlayerContr.Player"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 101,
                    "name": "Player",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14,
                    "src": "871:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                      "typeString": "struct PlayerContr.Player"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "870:22:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:0"
            },
            "scope": 135,
            "src": "849:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1045:83:0",
              "statements": [
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "creator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 133,
                      "src": "1056:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1056:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1074:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1074:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1056:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1095:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$14_storage_$",
                          "typeString": "mapping(address => struct PlayerContr.Player storage ref)"
                        }
                      },
                      "id": 129,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1103:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1095:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_storage",
                        "typeString": "struct PlayerContr.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1114:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                        "typeString": "struct PlayerContr.Player memory"
                      }
                    },
                    "src": "1095:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage",
                      "typeString": "struct PlayerContr.Player storage ref"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePlayer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "1015:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Player_$14_memory_ptr",
                    "typeString": "struct PlayerContr.Player"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 118,
                    "name": "Player",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14,
                    "src": "1015:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$14_storage_ptr",
                      "typeString": "struct PlayerContr.Player"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:22:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:0:0"
            },
            "scope": 135,
            "src": "993:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 300,
        "src": "114:1017:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 136,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 361,
              "src": "1156:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$361",
                "typeString": "contract Ownable"
              }
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "1156:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 138,
              "name": "PlayerContr",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "1165:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PlayerContr_$135",
                "typeString": "contract PlayerContr"
              }
            },
            "id": 139,
            "nodeType": "InheritanceSpecifier",
            "src": "1165:11:0"
          }
        ],
        "contractDependencies": [
          135,
          361,
          480,
          6891
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          135,
          480,
          6891,
          361
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 141,
            "name": "playerContr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1180:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PlayerContr_$135",
              "typeString": "contract PlayerContr"
            },
            "typeName": {
              "contractScope": null,
              "id": 140,
              "name": "PlayerContr",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "1180:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PlayerContr_$135",
                "typeString": "contract PlayerContr"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 149,
            "name": "placedBet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1223:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "indexed": false,
                  "name": "bet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1237:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1247:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1222:38:0"
            },
            "src": "1207:54:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 153,
            "name": "error",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "1276:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1275:15:0"
            },
            "src": "1264:27:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 157,
            "name": "lowLevelError",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "name": "lowLevelData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 157,
                  "src": "1314:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1313:20:0"
            },
            "src": "1294:40:0"
          },
          {
            "constant": false,
            "functionSelector": "b69ef8a8",
            "id": 159,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1339:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1339:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "1411:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1419:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "1429:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1419:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "playerContr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1453:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PlayerContr_$135",
                        "typeString": "contract PlayerContr"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1467:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PlayerContr_$135_$",
                          "typeString": "function () returns (contract PlayerContr)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 169,
                          "name": "PlayerContr",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 135,
                          "src": "1471:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PlayerContr_$135",
                            "typeString": "contract PlayerContr"
                          }
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PlayerContr_$135",
                        "typeString": "contract PlayerContr"
                      }
                    },
                    "src": "1453:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PlayerContr_$135",
                      "typeString": "contract PlayerContr"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 175,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 175,
                  "src": "1377:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:20:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:0"
            },
            "scope": 299,
            "src": "1365:127:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1523:59:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1540:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1540:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 177,
                          "src": "1553:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1540:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1532:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:34:0"
                },
                {
                  "id": 187,
                  "nodeType": "PlaceholderStatement",
                  "src": "1575:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "name": "costs",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1513:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1512:11:0"
            },
            "src": "1498:84:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1655:624:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 200,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1678:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$299",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$299",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1670:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 198,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1670:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1670:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1670:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1695:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1695:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1670:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e647321",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1706:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd",
                          "typeString": "literal_string \"Not enough funds!\""
                        },
                        "value": "Not enough funds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd",
                          "typeString": "literal_string \"Not enough funds!\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1662:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:64:0"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 214,
                        "nodeType": "Block",
                        "src": "1763:28:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1779:4:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 196,
                            "id": 213,
                            "nodeType": "Return",
                            "src": "1772:11:0"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 215,
                      "nodeType": "TryCatchClause",
                      "parameters": null,
                      "src": "1763:28:0"
                    },
                    {
                      "block": {
                        "id": 225,
                        "nodeType": "Block",
                        "src": "1825:188:0",
                        "statements": [
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 220,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 217,
                                  "src": "1975:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 219,
                                "name": "error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1969:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1969:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 222,
                            "nodeType": "EmitStatement",
                            "src": "1964:18:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2000:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 196,
                            "id": 224,
                            "nodeType": "Return",
                            "src": "1993:12:0"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 226,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 218,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 217,
                            "name": "reason",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 226,
                            "src": "1803:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1803:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "src": "1802:22:0"
                      },
                      "src": "1791:222:0"
                    },
                    {
                      "block": {
                        "id": 236,
                        "nodeType": "Block",
                        "src": "2048:226:0",
                        "statements": [
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 231,
                                  "name": "lowLevelData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "2230:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 230,
                                "name": "lowLevelError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "2216:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory)"
                                }
                              },
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2216:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 233,
                            "nodeType": "EmitStatement",
                            "src": "2211:32:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2261:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 196,
                            "id": 235,
                            "nodeType": "Return",
                            "src": "2254:12:0"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 237,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 229,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 228,
                            "name": "lowLevelData",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 237,
                            "src": "2021:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 227,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2021:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "src": "2020:27:0"
                      },
                      "src": "2014:260:0"
                    }
                  ],
                  "externalCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 209,
                        "name": "playerContr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1737:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PlayerContr_$135",
                          "typeString": "contract PlayerContr"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRandomNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "1737:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1737:26:0",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "TryStatement",
                  "src": "1733:541:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aacc5a17",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "302e3035",
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1630:10:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                      "typeString": "int_const 50000000000000000"
                    },
                    "value": "0.05"
                  }
                ],
                "id": 193,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 189,
                  "src": "1624:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1624:17:0"
              }
            ],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:2:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "1650:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1649:6:0"
            },
            "scope": 299,
            "src": "1588:691:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "2375:289:0",
              "statements": [
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 297,
                      "src": "2382:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 250,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2382:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2397:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2382:20:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "randomNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2412:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2424:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2412:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2429:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2412:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "2545:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 280,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2554:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 281,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2565:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2565:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2554:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 284,
                        "nodeType": "ExpressionStatement",
                        "src": "2554:20:0"
                      }
                    ]
                  },
                  "id": 286,
                  "nodeType": "IfStatement",
                  "src": "2409:173:0",
                  "trueBody": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "2437:103:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 259,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "2446:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2456:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2446:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 262,
                        "nodeType": "ExpressionStatement",
                        "src": "2446:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 263,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2469:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 264,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2480:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2480:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2469:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "2469:20:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 273,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2518:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2518:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2530:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "2518:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2498:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2498:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2498:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2498:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "2498:34:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2605:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2605:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2617:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2617:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "2628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 287,
                      "name": "placedBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2595:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "EmitStatement",
                  "src": "2590:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "2651:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "2644:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5f5be1f4",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "302e3035",
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2349:10:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                      "typeString": "int_const 50000000000000000"
                    },
                    "value": "0.05"
                  }
                ],
                "id": 246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 244,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 189,
                  "src": "2343:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2343:17:0"
              }
            ],
            "name": "flipCoin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "randomNum",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "2309:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2308:19:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "2370:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2369:6:0"
            },
            "scope": 299,
            "src": "2291:373:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 300,
        "src": "1135:1537:0"
      }
    ],
    "src": "0:2674:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-07-20T14:37:36.648Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}